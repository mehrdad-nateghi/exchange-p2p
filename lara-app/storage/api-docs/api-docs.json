{
    "openapi": "3.0.0",
    "info": {
        "title": "Welcome to PayLibero's APIs Panel!",
        "description": "This is a documentation covers all the available services at the backend of the project. For further information about the parameters, please feel free to explore  the Schema part of each API. The Schema part is available for POST and PUT HTTP services.",
        "version": "0.1"
    },
    "paths": {
        "/api/admin/signin": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign in an admin",
                "operationId": "24663843399fedd2304caa7a6ec57662",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Admin signed-in successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable request - Invalid input data"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/admin/signout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign out an admin",
                "operationId": "dcc25bc7b7fdb4740244d079225e9b80",
                "responses": {
                    "200": {
                        "description": "Successfully signed out."
                    },
                    "401": {
                        "description": "Unauthenticated."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/applicant/signin": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign in an applicant",
                "operationId": "b05ab9015d54b2ace9aa21a619aae832",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Applicant signed-in successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable request - Invalid input data"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/applicant/signout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign out an applicant",
                "operationId": "ff0a2ed6ce69db04ba86bc96a6c73953",
                "responses": {
                    "200": {
                        "description": "Successfully signed out."
                    },
                    "401": {
                        "description": "Unauthenticated."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/applicant/requests/{applicantId}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get all requests of the specific applicant",
                "operationId": "22f102cdf6ad51c3086ada958c05df20",
                "parameters": [
                    {
                        "name": "applicantId",
                        "in": "path",
                        "description": "ID of the applicant to fetch its requests",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Applicant not found"
                    }
                }
            }
        },
        "/api/applicant/requests/{applicantId}/{requestId}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get specific request of the specific applicant",
                "operationId": "bdd21481c97b513a5d8580ac8f1324e1",
                "parameters": [
                    {
                        "name": "applicantId",
                        "in": "path",
                        "description": "ID of the applicant to fetch its request",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Applicant not found or Request not found"
                    }
                }
            }
        },
        "/api/applicant/requests/create/setup/{countryId}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get setup information for request creation.",
                "operationId": "cf5bd3cf4b3da9a7f67bd5e560d49910",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "ID of the country to fetch its paymentMethods",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Country/FinancialInformation/EuroDailyRate not found"
                    }
                }
            }
        },
        "/api/applicant/requests/create": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "Create new request",
                "operationId": "3579dbf907eae4aeff671b04c65539da",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "applicant_id": {
                                        "type": "number"
                                    },
                                    "type": {
                                        "description": "0: Buy Request, 1: Sell Request",
                                        "type": "number",
                                        "enum": [
                                            0,
                                            1
                                        ]
                                    },
                                    "trade_volume": {
                                        "type": "number"
                                    },
                                    "lower_bound_feasibility_threshold": {
                                        "type": "number"
                                    },
                                    "upper_bound_feasibility_threshold": {
                                        "type": "number"
                                    },
                                    "acceptance_threshold": {
                                        "type": "number"
                                    },
                                    "request_rate": {
                                        "type": "number"
                                    },
                                    "request_payment_methods": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request created successfully"
                    },
                    "422": {
                        "description": "Unprocessable request - Invalid input data"
                    },
                    "404": {
                        "description": "Applicant not found or One or more selected payment methods are not available for this applicant"
                    },
                    "500": {
                        "description": "Internal Server Error - An error occurred while creating the request"
                    }
                }
            }
        },
        "/api/applicant/requests/update/setup/{applicantId}/{requestId}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get setup information for request update.",
                "operationId": "7e4278281cebc5f6668dfd3a001b3504",
                "parameters": [
                    {
                        "name": "applicantId",
                        "in": "path",
                        "description": "ID of the applicant to fetch his request",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request to fetch it for editing purpose",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Applicant/Request not found"
                    }
                }
            }
        },
        "/api/applicant/requests/update/{applicantId}/{requestId}": {
            "put": {
                "tags": [
                    "Requests"
                ],
                "summary": "Update a request",
                "operationId": "407e37309c0190da491e4727ba118e9f",
                "parameters": [
                    {
                        "name": "applicantId",
                        "in": "path",
                        "description": "ID of the applicant to fetch his request",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request to fetch it for updating purpose",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "trade_volume": {
                                        "type": "number"
                                    },
                                    "lower_bound_feasibility_threshold": {
                                        "type": "number"
                                    },
                                    "upper_bound_feasibility_threshold": {
                                        "type": "number"
                                    },
                                    "request_rate": {
                                        "type": "number"
                                    },
                                    "request_payment_methods": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "description": {
                                        "description": "There are three different conditions for this field: 1. When you want to update the value of description field, you have to pass the description by desired value. 2. When you don't want to update the value of description field, you have not to pass the description field by your request. 3. When you want to update the value of description field to the NULL, you have to pass the description by empty value like this: description:\" .",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request updated successfully"
                    },
                    "422": {
                        "description": "Unprocessable request - Invalid input data"
                    },
                    "404": {
                        "description": "Applicant/Request not found or One or more selected payment methods are not available for this applicant"
                    },
                    "500": {
                        "description": "Internal Server Error - An error occurred while updating the request"
                    }
                }
            }
        },
        "/": {
            "get": {
                "responses": {
                    "400": {
                        "description": "The specified user ID is invalid (not a number)."
                    }
                }
            }
        },
        "/api/bids/request/{requestId}": {
            "get": {
                "tags": [
                    "Bids"
                ],
                "summary": "Get all bids of specific request",
                "operationId": "20bde7f715681a67c0abca5d4c12c428",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request to fetch its bids",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Request not found"
                    }
                }
            }
        },
        "/api/requests/filter": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get all requests by filter",
                "operationId": "89d6f50210c5832aca2d73b4767ebaa2",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "0: Buy, 1: Sell",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                "0",
                                "1"
                            ]
                        }
                    },
                    {
                        "name": "payment_methods[]",
                        "in": "query",
                        "description": "Filter requests by payment methods",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "request_status",
                        "in": "query",
                        "description": "Filter requests by status",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "trade_volume_min",
                        "in": "query",
                        "description": "Filter requests by minimum trade volume",
                        "style": "form",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "trade_volume_max",
                        "in": "query",
                        "description": "Filter requests by maximum trade volume",
                        "style": "form",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort requests by order",
                        "style": "form",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "filter requests by count",
                        "style": "form",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/requests/{requestId}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get specific request by id",
                "operationId": "d46d8c483cbdc58840941d47604d1efc",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Request not found"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Requests",
            "description": "APIs for managing Requests"
        },
        {
            "name": "Requests",
            "description": "APIs for managing Requests"
        },
        {
            "name": "Bids",
            "description": "APIs for managing bids"
        },
        {
            "name": "Requests",
            "description": "APIs for managing Requests"
        }
    ]
}