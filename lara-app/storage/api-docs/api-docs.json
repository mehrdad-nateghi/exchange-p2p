{
    "openapi": "3.0.0",
    "info": {
        "title": "My First API",
        "description": "This is test documentation",
        "version": "0.1"
    },
    "paths": {
        "/api/bids/request/{requestId}": {
            "get": {
                "tags": [
                    "Bids"
                ],
                "summary": "Get all bids of specific request",
                "operationId": "a4136551abaf4379a508564a4581bcd3",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request to fetch its bids",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Request not found"
                    }
                }
            }
        },
        "/": {
            "get": {
                "responses": {
                    "400": {
                        "description": "The specified user ID is invalid (not a number)."
                    }
                }
            }
        },
        "/api/requests": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get all sell requests",
                "operationId": "d8762545247b9ed012f00e992cbfa665",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter requests by type (sell or buy)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "sell",
                                "buy"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/requests/applicant/{applicantId}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get all requests of the specific applicant",
                "operationId": "467afa787f86a68259727db7727a50fe",
                "parameters": [
                    {
                        "name": "applicantId",
                        "in": "path",
                        "description": "ID of the applicant to fetch its requests",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Applicant not found"
                    }
                }
            }
        },
        "/api/requests/applicant/{applicantId}/{requestId}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get specific request of the specific applicant",
                "operationId": "ec818d24adada38bc4ffd0d3ae9773f2",
                "parameters": [
                    {
                        "name": "applicantId",
                        "in": "path",
                        "description": "ID of the applicant to fetch its request",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Applicant not found or Request not found"
                    }
                }
            }
        },
        "/api/requests/filter-requests": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get all requests by filter",
                "operationId": "12ca952f0c8dce6e881dd50937dc0fd5",
                "parameters": [
                    {
                        "name": "payment_methods[]",
                        "in": "query",
                        "description": "Filter requests by payment methods",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "request_status",
                        "in": "query",
                        "description": "Filter requests by status",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "trade_volume_min",
                        "in": "query",
                        "description": "Filter requests by minimum trade volume",
                        "style": "form",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "trade_volume_max",
                        "in": "query",
                        "description": "Filter requests by maximum trade volume",
                        "style": "form",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort requests by order",
                        "style": "form",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/requests/{requestId}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get specific request by id",
                "operationId": "6e247c25a53513fb5a2d97a8f2583b41",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Request not found"
                    }
                }
            }
        },
        "/api/requests/create/setup/{countryId}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get setup information for request creation.",
                "operationId": "2bd93f1da3f234a2277a9f708529ad29",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "ID of the country to fetch its paymentMethods",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Country/FinancialInformation/EuroDailyRate not found"
                    }
                }
            }
        },
        "/api/requests/create": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "Create new request",
                "operationId": "ae65f77c17a2325301023786cd6c245e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "applicant_id": {
                                        "type": "number"
                                    },
                                    "type": {
                                        "description": "0: Buy Request, 1: Sell Request",
                                        "type": "number",
                                        "enum": [
                                            0,
                                            1
                                        ]
                                    },
                                    "trade_volume": {
                                        "type": "number"
                                    },
                                    "lower_bound_feasibility_threshold": {
                                        "type": "number"
                                    },
                                    "upper_bound_feasibility_threshold": {
                                        "type": "number"
                                    },
                                    "acceptance_threshold": {
                                        "type": "number"
                                    },
                                    "request_rate": {
                                        "type": "number"
                                    },
                                    "request_payment_methods": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request created successfully"
                    },
                    "422": {
                        "description": "Unprocessable request - Invalid input data"
                    },
                    "404": {
                        "description": "Applicant not found or One or more selected payment methods are not available for this applicant"
                    },
                    "500": {
                        "description": "Internal Server Error - An error occurred while creating the request"
                    }
                }
            }
        },
        "/api/requests/update/{applicantId}/{requestId}": {
            "put": {
                "tags": [
                    "Requests"
                ],
                "summary": "Update a request",
                "operationId": "2127221ad56ae468bbc630f24f2b021e",
                "parameters": [
                    {
                        "name": "applicantId",
                        "in": "path",
                        "description": "ID of the applicant to fetch his request",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request to fetch it for updating purpose",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "trade_volume": {
                                        "type": "number"
                                    },
                                    "lower_bound_feasibility_threshold": {
                                        "type": "number"
                                    },
                                    "upper_bound_feasibility_threshold": {
                                        "type": "number"
                                    },
                                    "request_rate": {
                                        "type": "number"
                                    },
                                    "request_payment_methods": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "description": {
                                        "description": "There are three different conditions for this field: 1. When you want to update the value of description field, you have to pass the description by desired value. 2. When you don't want to update the value of description field, you have not to pass the description field by your request. 3. When you want to update the value of description field to the NULL, you have to pass the description by empty value like this: description:\" .",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request updated successfully"
                    },
                    "422": {
                        "description": "Unprocessable request - Invalid input data"
                    },
                    "404": {
                        "description": "Applicant/Request not found or One or more selected payment methods are not available for this applicant"
                    },
                    "500": {
                        "description": "Internal Server Error - An error occurred while updating the request"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Bids",
            "description": "APIs for managing bids"
        },
        {
            "name": "Requests",
            "description": "APIs for managing requests"
        }
    ]
}