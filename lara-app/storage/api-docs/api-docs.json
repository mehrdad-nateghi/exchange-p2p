{
    "openapi": "3.0.0",
    "info": {
        "title": "Welcome to PayLibero's APIs Panel!",
        "description": "This is a documentation covers all the available services at the backend of the project. For further information about the parameters, please feel free to explore  the Schema part of each API. The Schema part is available for POST and PUT HTTP services.",
        "version": "0.1"
    },
    "paths": {
        "/api/admin/signin": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign in an admin",
                "operationId": "adminSignin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Unprocessable request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/admin/signout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign out an admin",
                "operationId": "adminSignout",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/applicant/signin": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign in an applicant",
                "operationId": "applicantSignin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    },
                    "422": {
                        "description": "Unprocessable request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/applicant/signout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign out an applicant",
                "operationId": "applicantSignout",
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/applicant/requests": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get all requests of an authenticated applicant",
                "operationId": "getAllRequestsOfAnAuthenticatedApplicant",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/applicant/requests/{requestId}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get specific request of an authenticated applicant",
                "operationId": "getSpecificRequestOfAnAuthenticatedApplicant",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Request not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/applicant/requests/create/setup/{countryId}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get setup information for request creation",
                "operationId": "getSetupInformationForRequestCreation",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "ID of the country to fetch its paymentMethods",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Country/FinancialInformation/EuroDailyRate not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/applicant/requests/create": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "Create new request",
                "operationId": "createRequest",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "applicant_id": {
                                        "type": "number"
                                    },
                                    "type": {
                                        "description": "0: Buy Request, 1: Sell Request",
                                        "type": "number",
                                        "enum": [
                                            0,
                                            1
                                        ]
                                    },
                                    "trade_volume": {
                                        "type": "number"
                                    },
                                    "lower_bound_feasibility_threshold": {
                                        "type": "number"
                                    },
                                    "upper_bound_feasibility_threshold": {
                                        "type": "number"
                                    },
                                    "acceptance_threshold": {
                                        "type": "number"
                                    },
                                    "request_rate": {
                                        "type": "number"
                                    },
                                    "request_payment_methods": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Unprocessable request"
                    },
                    "404": {
                        "description": "Applicant not found or One or more selected payment methods are not available for the applicant"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/applicant/requests/update/setup/{requestId}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get setup information for updating a request by applicant who initiated the request",
                "operationId": "getSetupInformationForRequestUpdateByApplicant",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request to fetch it for editing purpose",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Applicant/Request not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/applicant/requests/update/{requestId}": {
            "put": {
                "tags": [
                    "Requests"
                ],
                "summary": "Update a specific request by an applicant who initiated the request",
                "operationId": "updateRequestByApplicant",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request to fetch it for updating purpose",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "trade_volume": {
                                        "type": "number"
                                    },
                                    "lower_bound_feasibility_threshold": {
                                        "type": "number"
                                    },
                                    "upper_bound_feasibility_threshold": {
                                        "type": "number"
                                    },
                                    "request_rate": {
                                        "type": "number"
                                    },
                                    "request_payment_methods": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "description": {
                                        "description": "There are three different conditions for this field: 1. When you want to update the value of description field, you have to pass the description by desired value. 2. When you don't want to update the value of description field, you have not to pass the description field by your request. 3. When you want to update the value of description field to the NULL, you have to pass the description by empty value like this: description:\" .",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Unprocessable request"
                    },
                    "404": {
                        "description": "Request not found or One or more selected payment methods are not available for this applicant"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/applicant/requests/remove/{requestId}": {
            "delete": {
                "tags": [
                    "Requests"
                ],
                "summary": "Remove a specific request by an applicant who initiated the request",
                "operationId": "removeRequestByApplicant",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request to remove",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Request not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/": {
            "get": {
                "responses": {
                    "400": {
                        "description": "The specified user ID is invalid (not a number)."
                    }
                }
            }
        },
        "/api/bids/request/{requestId}": {
            "get": {
                "tags": [
                    "Bids"
                ],
                "summary": "Get all bids of specific request",
                "operationId": "getAssociatedBidsOfSpecificRequest",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request to fetch its bids",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Request not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/requests/filter": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get all requests by filter",
                "operationId": "getAllRequestsByFilter",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "0: Buy, 1: Sell",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                "0",
                                "1"
                            ]
                        }
                    },
                    {
                        "name": "payment_methods[]",
                        "in": "query",
                        "description": "Filter requests by payment methods",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "request_status",
                        "in": "query",
                        "description": "Filter requests by status",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "trade_volume_min",
                        "in": "query",
                        "description": "Filter requests by minimum trade volume",
                        "style": "form",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "trade_volume_max",
                        "in": "query",
                        "description": "Filter requests by maximum trade volume",
                        "style": "form",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort requests by order",
                        "style": "form",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "filter requests by count",
                        "style": "form",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/requests/{requestId}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get specific request by id",
                "operationId": "getSpecificRequest",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of the request",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Request not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Requests",
            "description": "APIs for managing Requests"
        },
        {
            "name": "Requests",
            "description": "APIs for managing Requests"
        },
        {
            "name": "Bids",
            "description": "APIs for managing bids"
        },
        {
            "name": "Requests",
            "description": "APIs for managing Requests"
        }
    ]
}