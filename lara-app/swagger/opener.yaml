openapi: 3.0.0
info:
  version: 1.0.0
  title: PayLibero API
  description: description...
components:
  schemas:
    Base200Response:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: string
          description: "The status of the API response"
          example: "success"
        code:
          type: integer
          description: "The HTTP status code of the response"
          example: 200
        message:
          type: string
          description: "A descriptive message about the response"
          example: "The requests were retrieved successfully."
    Pagination:
      type: object
      required:
        - current_page
        - first_page_url
        - from
        - last_page
        - last_page_url
        - next_page_url
        - path
        - per_page
        - prev_page_url
        - to
        - total
      properties:
        current_page:
          type: integer
          description: "Current page number"
          example: 1
        first_page_url:
          type: string
          description: "URL of the first page"
        from:
          type: integer
          description: "Start index of items on current page"
          example: 1
        last_page:
          type: integer
          description: "Last page number"
          example: 1
        last_page_url:
          type: string
          description: "URL of the last page"
        next_page_url:
          type: string
          nullable: true
          description: "URL of the next page"
          example: null
        path:
          type: string
          description: "Base path for pagination URLs"
        per_page:
          type: integer
          description: "Number of items per page"
          example: 15
        prev_page_url:
          type: string
          nullable: true
          description: "URL of the previous page"
          example: null
        to:
          type: integer
          description: "End index of items on current page"
          example: 6
        total:
          type: integer
          description: "Total number of items"
          example: 6
    PaymentMethod:
      type: object
      required:
        - ulid
        - payment_method
      properties:
        ulid:
          type: string
          description: "Unique identifier for the payment method"
          example: "01J25YKXXAS0KX1W4383HE65GR"
        payment_method:
          type: object
          required:
            - type
            - holder_name
            - bank_name
            - card_number
            - sheba
            - account_no
            - is_active
            - icon
            - created_at
            - updated_at
          properties:
            type:
              type: string
              enum:
                - foreign_bank
                - paypal
                - rial_bank
              description: "Type of payment method"
              example: "rial_bank"
            holder_name:
              type: string
              description: "Name of the account holder"
              example: ""
            bank_name:
              type: string
              description: "Name of the bank"
              example: ""
            card_number:
              type: string
              description: "Card number"
              example: ""
            sheba:
              type: string
              description: "SHEBA number"
              example: ""
            account_no:
              type: string
              description: "Account number"
              example: ""
            is_active:
              type: boolean
              description: "Whether the payment method is active"
              example: false
            icon:
              type: string
              description: "payment method icon url"
            created_at:
              type: string
              format: date-time
              description: "Creation timestamp"
              example: "2024-07-07T06:38:04.000000Z"
            updated_at:
              type: string
              format: date-time
              description: "Last update timestamp"
              example: "2024-07-07T06:38:04.000000Z"
    Request:
      type: object
      required:
        - ulid
        - number
        - volume
        - price
        - type
        - user
        - status
        - created_at
        - deposit_reason
        - updated_at
        - payment_methods
      properties:
        ulid:
          type: string
          description: "Unique identifier for the request"
          example: "01J26AAGQQ2HTYHZGR9PM6DGJD"
        number:
          type: string
          description: "Request number"
          example: "RE-550585"
        user:
          $ref: "#/components/schemas/User"
        volume:
          type: string
          description: "Volume of the request"
          example: "250.00"
        price:
          type: string
          description: "Price of the request"
          example: "59193.00"
        type:
          type: string
          enum: ["buy", "sell"]
          description: "Type of the request (BUY or SELL)"
          example: "buy"
        status:
          type: string
          enum: ["pending", "processing", "trading", "canceled"]
          description: "Status of the request"
          example: "pending"
        deposit_reason:
          type: string
          nullable: true
          description: "reason of the deposit"
        created_at:
          type: string
          format: date-time
          description: "Creation timestamp"
          example: "2024-07-07T06:38:04.000000Z"
        updated_at:
          type: string
          format: date-time
          description: "Last update timestamp"
          example: "2024-07-07T06:38:04.000000Z"
        payment_methods:
          type: object
          required:
            - items
            - pagination
          properties:
            pagination:
              $ref: "#/components/schemas/Pagination"
            items:
              type: array
              description: "Array of payment method items"
              items:
                $ref: "#/components/schemas/PaymentMethod"
    User:
      type: object
      required:
        - ulid
        - first_name
        - last_name
        - email
        - created_at
        - updated_at
        - roles
      properties:
        ulid:
          type: string
          example: "01HZA0X41HX5CXY2YWD4GP0WAG"
        first_name:
          type: string
          example: "Ali"
        last_name:
          type: string
          example: "Karimi"
        email:
          type: string
          example: "a@b.com"
        created_at:
          type: string
          format: date-time
          example: "2024-05-15T06:56:46+00:00"
        updated_at:
          type: string
          format: date-time
          example: "2024-05-15T06:56:46+00:00"
        roles:
          type: array
          items:
            type: object
            required:
              - name
              - created_at
              - updated_at
            properties:
              name:
                type: string
                example: "applicant"
              created_at:
                type: string
                format: date-time
                example: "2024-05-15T06:56:46+00:00"
              updated_at:
                type: string
                format: date-time
                example: "2024-05-15T06:56:46+00:00"
    Bid:
      type: object
      required:
        - ulid
        - number
        - price
        - is_highest_price
        - status
        - user
        - request
        - created_at
        - updated_at
      properties:
        ulid:
          type: string
          description: "Unique identifier for the request"
          example: "01J25YP7C2MTHAXNREE7FNPY85"
        number:
          type: integer
          description: "Number of the bid"
        user:
          $ref: "#/components/schemas/User"
        price:
          type: string
          description: "Price of the bid"
          example: "59193.00"
        is_highest_price:
          type: boolean
          description: "indicates that the bid has highest price or not"
        status:
          type: string
          enum: ["pending", "processing", "trading", "canceled"]
          description: "Status of the request"
          example: "pending"
        created_at:
          type: string
          format: date-time
          description: "Creation timestamp"
          example: "2024-07-07T06:38:04.000000Z"
        updated_at:
          type: string
          format: date-time
          description: "Last update timestamp"
          example: "2024-07-07T06:38:04.000000Z"
        request:
          $ref: "#/components/schemas/Request"
    Trade:
      type: object
      required:
        - ulid
        - number
        - status
        - bid
        - completed_at
        - created_at
        - updated_at
      properties:
        ulid:
          type: string
          description: "Unique identifier for the trade"
          example: "01J5RR12N6A76MRDBTTMS07HY3"
        number:
          type: string
          description: "Trade number"
          example: "TR-357535"
        status:
          type: string
          enum: ["processing", "completed", "canceled"]
          description: "Status of the trade"
          example: "processing"
        bid:
          allOf:
            - $ref: "#/components/schemas/Bid"
            - type: object
              required:
                - payment_method
              properties:
                payment_method:
                  $ref: "#/components/schemas/PaymentMethod"
        completed_at:
          type: string
          format: date-time
          nullable: true
          description: "Completion timestamp"
        created_at:
          type: string
          format: date-time
          description: "Creation timestamp"
        updated_at:
          type: string
          format: date-time
          description: "Last update timestamp"
    UserTrade:
      allOf:
        - $ref: "#/components/schemas/Trade"
        - type: object
          required:
            - steps
            - invoices
          properties:
            steps:
              type: array
              items:
                $ref: "#/components/schemas/TradeStep"
            invoices:
              type: array
              items:
                $ref: "#/components/schemas/Invoice"

    TradeStep:
      type: object
      required:
        - name
        - description
        - owner
        - status
        - created_at
        - updated_at
      properties:
        name:
          type: string
        description:
          type: string
        owner:
          type: string
          enum: [buyer, seller, system]
        status:
          type: string
          enum: [todo, doing, done]
        expire_at:
          type: string
          format: date-time
          nullable: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Invoice:
      type: object
      required:
        - ulid
        - number
        - amount
        - fee
        - status
        - type
        - created_at
        - updated_at
      properties:
        ulid:
          type: string
        number:
          type: string
        amount:
          type: string
        fee:
          type: string
        status:
          type: string
          enum: [pending, paid, canceled]
        type:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
  parameters:
    pageSize:
      name: per_page
      in: query
      description: "Number of items to return per page"
      required: false
      schema:
        type: integer
        default: 15
    pageNumber:
      name: page
      in: query
      description: "page number"
      required: false
      schema:
        type: integer
        default: 1
  securitySchemes:
    bearer:
      type: http
      scheme: bearer

  responses:
    default:
      description: ""
      content:
        application/json:
          schema:
            type: object

security:
  - bearer: []
servers:
  - url: http://localhost:8000/api/v1
  - url: http://localhost:8000/api
  - url: https://core-lara-33e1254e7d-paylibero-nightly.apps.ir-thr-ba1.arvancaas.ir/api/v1
  - url: https://core-lara-33e1254e7d-paylibero-nightly.apps.ir-thr-ba1.arvancaas.ir/api
  - url: https://nightly.paylibero.ir/api/v1
  - url: https://nightly.paylibero.ir/api
