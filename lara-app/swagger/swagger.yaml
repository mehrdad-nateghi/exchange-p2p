openapi: 3.0.0
info:
  version: 1.0.0
  title: "PayLibero API"
  description: description...
components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
  responses:
    default:
      description: ""
      content:
        application/json:
          schema:
            type: object
security:
  - bearer: {}
servers:
  - url: "http://localhost:8000/api/v1"
  - url: "http://localhost:8000/api"
  - url: "https://core-lara-33e1254e7d-paylibero-nightly.apps.ir-thr-ba1.arvancaas.ir/api/v1"
  - url: "https://core-lara-33e1254e7d-paylibero-nightly.apps.ir-thr-ba1.arvancaas.ir/api"
  - url: "https://nightly.paylibero.ir/api/v1"
  - url: "https://nightly.paylibero.ir/api"
paths:
  /users/requests:
    get:
      tags:
        - requests
      summary: "Get all requests"
      description: "Get all requests of a user"
      operationId: getUserRequests
      parameters:
        - name: "filter[type]"
          in: query
          description: "The type of request"
          required: false
          schema:
            type: string
            enum:
              - buy
              - sell
            example: buy
        - name: "filter[status]"
          in: query
          description: "The status of the request"
          required: false
          schema:
            type: string
            enum:
              - pending
              - processing
              - trading
              - canceled
            example: pending
        - name: sort
          in: query
          description: "The sort order of the results"
          required: false
          schema:
            type: string
            enum:
              - created_at
              - "-created_at"
              - price
              - "-price"
            example: "-created_at"
        - name: per_page
          in: query
          description: "Number of items to return per page"
          required: false
          schema:
            type: integer
            default: 15
        - name: page
          in: query
          description: "page number"
          required: false
          schema:
            type: integer
            default: 1
      responses:
        200:
          description: "The requests was retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - code
                  - message
                  - data
                properties:
                  status:
                    {
                      type: string,
                      description: "The status of the API response",
                      example: success,
                    }
                  code:
                    {
                      type: integer,
                      description: "The HTTP status code of the response",
                      example: 200,
                    }
                  message:
                    {
                      type: string,
                      description: "A descriptive message about the response",
                      example: "The requests were retrieved successfully.",
                    }
                  data:
                    {
                      type: object,
                      required: [items, pagination],
                      properties:
                        {
                          items:
                            {
                              type: array,
                              description: "Array of request items",
                              items:
                                {
                                  type: object,
                                  required:
                                    [
                                      ulid,
                                      number,
                                      volume,
                                      price,
                                      type,
                                      status,
                                      created_at,
                                      updated_at,
                                      payment_methods,
                                    ],
                                  properties:
                                    {
                                      ulid:
                                        {
                                          type: string,
                                          description: "Unique identifier for the request",
                                          example: 01J25YP7C2MTHAXNREE7FNPY85,
                                        },
                                      number:
                                        {
                                          type: string,
                                          description: "Request number",
                                          example: RE-953539,
                                        },
                                      volume:
                                        {
                                          type: string,
                                          description: "Volume of the request",
                                          example: "250.00",
                                        },
                                      price:
                                        {
                                          type: string,
                                          description: "Price of the request",
                                          example: "2000.00",
                                        },
                                      type:
                                        {
                                          type: string,
                                          enum: [buy, sell],
                                          description: "Type of the request (BUY or SELL)",
                                          example: BUY,
                                        },
                                      status:
                                        {
                                          type: string,
                                          enum:
                                            [
                                              pending,
                                              processing,
                                              trading,
                                              canceled,
                                            ],
                                          description: "Status of the request",
                                          example: pending,
                                        },
                                      created_at:
                                        {
                                          type: string,
                                          format: date-time,
                                          description: "Creation timestamp",
                                          example: "2024-07-07T06:38:04.000000Z",
                                        },
                                      updated_at:
                                        {
                                          type: string,
                                          format: date-time,
                                          description: "Last update timestamp",
                                          example: "2024-07-07T06:38:04.000000Z",
                                        },
                                      payment_methods:
                                        {
                                          type: object,
                                          required: [items, pagination],
                                          properties:
                                            {
                                              items:
                                                {
                                                  type: array,
                                                  description: "Array of payment method items",
                                                  items:
                                                    {
                                                      type: object,
                                                      required:
                                                        [ulid, payment_method],
                                                      properties:
                                                        {
                                                          ulid:
                                                            {
                                                              type: string,
                                                              description: "Unique identifier for the payment method",
                                                              example: 01J25YKXXAS0KX1W4383HE65GR,
                                                            },
                                                          payment_method:
                                                            {
                                                              type: object,
                                                              required:
                                                                [
                                                                  type,
                                                                  holder_name,
                                                                  bank_name,
                                                                  card_number,
                                                                  sheba,
                                                                  account_no,
                                                                  is_active,
                                                                  icon,
                                                                  created_at,
                                                                  updated_at,
                                                                ],
                                                              properties:
                                                                {
                                                                  type:
                                                                    {
                                                                      type: string,
                                                                      description: "Type of payment method",
                                                                      example: rial_bank,
                                                                    },
                                                                  holder_name:
                                                                    {
                                                                      type: string,
                                                                      description: "Name of the account holder",
                                                                      example: "",
                                                                    },
                                                                  bank_name:
                                                                    {
                                                                      type: string,
                                                                      description: "Name of the bank",
                                                                      example: "",
                                                                    },
                                                                  card_number:
                                                                    {
                                                                      type: string,
                                                                      description: "Card number",
                                                                      example: "",
                                                                    },
                                                                  sheba:
                                                                    {
                                                                      type: string,
                                                                      description: "SHEBA number",
                                                                      example: "",
                                                                    },
                                                                  account_no:
                                                                    {
                                                                      type: string,
                                                                      description: "Account number",
                                                                      example: "",
                                                                    },
                                                                  is_active:
                                                                    {
                                                                      type: boolean,
                                                                      description: "Whether the payment method is active",
                                                                      example: false,
                                                                    },
                                                                  icon:
                                                                    {
                                                                      type: string,
                                                                      description: "payment method icon url",
                                                                    },
                                                                  created_at:
                                                                    {
                                                                      type: string,
                                                                      format: date-time,
                                                                      description: "Creation timestamp",
                                                                      example: "2024-07-07T06:38:04.000000Z",
                                                                    },
                                                                  updated_at:
                                                                    {
                                                                      type: string,
                                                                      format: date-time,
                                                                      description: "Last update timestamp",
                                                                      example: "2024-07-07T06:38:04.000000Z",
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                },
                            },
                          pagination:
                            {
                              type: object,
                              required:
                                [
                                  current_page,
                                  first_page_url,
                                  from,
                                  last_page,
                                  last_page_url,
                                  next_page_url,
                                  path,
                                  per_page,
                                  prev_page_url,
                                  to,
                                  total,
                                ],
                              properties:
                                {
                                  current_page:
                                    {
                                      type: integer,
                                      description: "Current page number",
                                      example: 1,
                                    },
                                  first_page_url:
                                    {
                                      type: string,
                                      description: "URL of the first page",
                                      example: "http://localhost:8000/api/v1/users/requests?page=1",
                                    },
                                  from:
                                    {
                                      type: integer,
                                      description: "Start index of items on current page",
                                      example: 1,
                                    },
                                  last_page:
                                    {
                                      type: integer,
                                      description: "Last page number",
                                      example: 1,
                                    },
                                  last_page_url:
                                    {
                                      type: string,
                                      description: "URL of the last page",
                                      example: "http://localhost:8000/api/v1/users/requests?page=1",
                                    },
                                  next_page_url:
                                    {
                                      type: string,
                                      nullable: true,
                                      description: "URL of the next page",
                                      example: null,
                                    },
                                  path:
                                    {
                                      type: string,
                                      description: "Base path for pagination URLs",
                                      example: "http://localhost:8000/api/v1/users/requests",
                                    },
                                  per_page:
                                    {
                                      type: integer,
                                      description: "Number of items per page",
                                      example: 15,
                                    },
                                  prev_page_url:
                                    {
                                      type: string,
                                      nullable: true,
                                      description: "URL of the previous page",
                                      example: null,
                                    },
                                  to:
                                    {
                                      type: integer,
                                      description: "End index of items on current page",
                                      example: 6,
                                    },
                                  total:
                                    {
                                      type: integer,
                                      description: "Total number of items",
                                      example: 6,
                                    },
                                },
                            },
                        },
                    }
    post:
      tags:
        - requests
      summary: "Create a new request"
      description: "Create a new request with the specified details"
      operationId: createRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - volume
                - price
                - payment_methods
              properties:
                type:
                  type: integer
                  description: "The type of request, Buy: 1 | Sell:2"
                  enum: [1, 2]
                  example: 1
                volume:
                  type: integer
                  description: "Volume of the request"
                  example: "250"
                price:
                  type: integer
                  description: "Price of the request"
                  example: "2000"
                payment_methods:
                  type: array
                  description: "Array of payment method ULIDs"
                  items: { type: string }
                  example:
                    [01J25YKXXAS0KX1W4383HE65GR, 01J25YKY0C2GHB2Y4BAESSTXQ6]
      responses:
        201:
          description: "Created Successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    {
                      type: string,
                      description: "The status of the operation",
                      example: success,
                    }
                  code:
                    {
                      type: integer,
                      description: "The HTTP status code",
                      example: 201,
                    }
                  message:
                    {
                      type: string,
                      description: "A descriptive message about the operation result",
                      example: "The request was created successfully.",
                    }
                  data:
                    {
                      type: object,
                      properties:
                        {
                          ulid:
                            {
                              type: string,
                              description: "Unique identifier for the request",
                              example: 01J25YP7C2MTHAXNREE7FNPY85,
                            },
                          number:
                            {
                              type: string,
                              description: "Request number",
                              example: RE-953539,
                            },
                          volume:
                            {
                              type: string,
                              description: "Volume of the request",
                              example: "250",
                            },
                          price:
                            {
                              type: string,
                              description: "Price of the request",
                              example: "2000",
                            },
                          type:
                            {
                              type: string,
                              enum: [BUY, SELL],
                              description: "Type of the request",
                              example: BUY,
                            },
                          status:
                            {
                              type: string,
                              description: "Status of the request",
                              example: PENDING,
                            },
                          payment_methods:
                            {
                              type: object,
                              properties:
                                {
                                  items:
                                    {
                                      type: array,
                                      items:
                                        {
                                          type: object,
                                          properties:
                                            {
                                              ulid:
                                                {
                                                  type: string,
                                                  description: "Unique identifier for the payment method",
                                                  example: 01J25YKXXAS0KX1W4383HE65GR,
                                                },
                                              payment_method:
                                                {
                                                  type: object,
                                                  properties:
                                                    {
                                                      type:
                                                        {
                                                          type: string,
                                                          description: "Type of payment method",
                                                          example: rial_bank,
                                                        },
                                                      holder_name:
                                                        {
                                                          type: string,
                                                          description: "Name of the account holder",
                                                          example: "",
                                                        },
                                                      bank_name:
                                                        {
                                                          type: string,
                                                          description: "Name of the bank",
                                                          example: "",
                                                        },
                                                      card_number:
                                                        {
                                                          type: string,
                                                          description: "Card number",
                                                          example: "",
                                                        },
                                                      sheba:
                                                        {
                                                          type: string,
                                                          description: "SHEBA number",
                                                          example: "",
                                                        },
                                                      account_no:
                                                        {
                                                          type: string,
                                                          description: "Account number",
                                                          example: "",
                                                        },
                                                      email:
                                                        {
                                                          type: string,
                                                          description: "Email for PayPal payment method",
                                                          example: test@gmail.com,
                                                        },
                                                      is_active:
                                                        {
                                                          type: boolean,
                                                          description: "Whether the payment method is active",
                                                          example: false,
                                                        },
                                                      created_at:
                                                        {
                                                          type: string,
                                                          format: date-time,
                                                          description: "Creation date of the payment method",
                                                          example: "2024-07-07T06:38:04.000000Z",
                                                        },
                                                      updated_at:
                                                        {
                                                          type: string,
                                                          format: date-time,
                                                          description: "Creation date of the payment method",
                                                          example: "2024-07-07T06:38:04.000000Z",
                                                        },
                                                    },
                                                  required:
                                                    [
                                                      type,
                                                      holder_name,
                                                      bank_name,
                                                      card_number,
                                                      sheba,
                                                      account_no,
                                                      email,
                                                      is_active,
                                                      created_at,
                                                      updated_at,
                                                    ],
                                                },
                                            },
                                          required: [ulid, payment_method],
                                        },
                                    },
                                },
                              required: [items],
                            },
                        },
                      required:
                        [
                          ulid,
                          number,
                          volume,
                          price,
                          type,
                          status,
                          payment_methods,
                        ],
                    }
                required:
                  - status
                  - code
                  - message
                  - data
  "/users/requests/{request}":
    get:
      tags:
        - requests
      summary: "Get a request by ULID"
      description: "This endpoint retrieve a request by ULID."
      operationId: getUserRequest
      parameters:
        - name: request
          in: path
          required: true
          description: "The ULID of the request."
          schema:
            type: string
      responses:
        200:
          description: "The user's request was retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - code
                  - message
                  - data
                properties:
                  status:
                    {
                      type: string,
                      description: "The status of the API response",
                      example: success,
                    }
                  code:
                    {
                      type: integer,
                      description: "The HTTP status code of the response",
                      example: 200,
                    }
                  message:
                    {
                      type: string,
                      description: "A descriptive message about the response",
                      example: "The request was retrieved successfully.",
                    }
                  data:
                    {
                      type: object,
                      required:
                        [
                          ulid,
                          number,
                          volume,
                          price,
                          type,
                          status,
                          payment_methods,
                        ],
                      properties:
                        {
                          ulid:
                            {
                              type: string,
                              description: "Unique identifier for the request",
                              example: 01J26AAGQQ2HTYHZGR9PM6DGJD,
                            },
                          number:
                            {
                              type: string,
                              description: "Request number",
                              example: RE-550585,
                            },
                          volume:
                            {
                              type: string,
                              description: "Volume of the request",
                              example: "250.00",
                            },
                          price:
                            {
                              type: string,
                              description: "Price of the request",
                              example: "59193.00",
                            },
                          type:
                            {
                              type: string,
                              enum: [buy, sell],
                              description: "Type of the request (BUY or SELL)",
                              example: BUY,
                            },
                          status:
                            {
                              type: string,
                              enum: [pending, processing, trading, canceled],
                              description: "Status of the request",
                              example: PENDING,
                            },
                          payment_methods:
                            {
                              type: object,
                              required: [items, pagination],
                              properties:
                                {
                                  items:
                                    {
                                      type: array,
                                      description: "Array of payment method items",
                                      items:
                                        {
                                          type: object,
                                          required: [ulid, payment_method],
                                          properties:
                                            {
                                              ulid:
                                                {
                                                  type: string,
                                                  description: "Unique identifier for the payment method",
                                                  example: 01J25YKXXAS0KX1W4383HE65GR,
                                                },
                                              payment_method:
                                                {
                                                  type: object,
                                                  required:
                                                    [
                                                      type,
                                                      holder_name,
                                                      is_active,
                                                      created_at,
                                                      updated_at,
                                                    ],
                                                  properties:
                                                    {
                                                      type:
                                                        {
                                                          type: string,
                                                          description: "Type of payment method",
                                                          example: rial_bank,
                                                        },
                                                      holder_name:
                                                        {
                                                          type: string,
                                                          description: "Name of the account holder",
                                                          example: "",
                                                        },
                                                      bank_name:
                                                        {
                                                          type: string,
                                                          description: "Name of the bank",
                                                          example: "",
                                                        },
                                                      card_number:
                                                        {
                                                          type: string,
                                                          description: "Card number",
                                                          example: "",
                                                        },
                                                      sheba:
                                                        {
                                                          type: string,
                                                          description: "SHEBA number",
                                                          example: "",
                                                        },
                                                      account_no:
                                                        {
                                                          type: string,
                                                          description: "Account number",
                                                          example: "",
                                                        },
                                                      email:
                                                        {
                                                          type: string,
                                                          description: "Email address for PayPal",
                                                          example: mehrdad.nateghe@gmail.com,
                                                        },
                                                      is_active:
                                                        {
                                                          type: boolean,
                                                          description: "Whether the payment method is active",
                                                          example: false,
                                                        },
                                                      created_at:
                                                        {
                                                          type: string,
                                                          format: date-time,
                                                          description: "Creation timestamp",
                                                          example: "2024-07-07T06:38:04.000000Z",
                                                        },
                                                      updated_at:
                                                        {
                                                          type: string,
                                                          format: date-time,
                                                          description: "Last update timestamp",
                                                          example: "2024-07-07T06:38:04.000000Z",
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                  pagination:
                                    {
                                      type: object,
                                      nullable: true,
                                      description: "Pagination information for payment methods",
                                      example: null,
                                    },
                                },
                            },
                        },
                    }
  /users/me:
    get:
      tags:
        - users
      summary: "Get Current User Information"
      description: "Retrieve information about the currently authenticated user."
      operationId: me
      parameters: {}
      requestBody: null
      responses:
        200:
          description: "User information retrieved successfully."
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: success }
                  code: { type: integer, example: 200 }
                  message:
                    {
                      type: string,
                      example: "User information retrieved successfully.",
                    }
                  data:
                    {
                      type: object,
                      properties:
                        {
                          ulid:
                            {
                              type: string,
                              example: 01HZA0X41HX5CXY2YWD4GP0WAG,
                            },
                          first_name: { type: string, example: Ali },
                          last_name: { type: string, example: Karimi },
                          email: { type: string, example: a@b.com },
                          created_at:
                            {
                              type: string,
                              format: date-time,
                              example: "2024-05-15T06:56:46+00:00",
                            },
                          updated_at:
                            {
                              type: string,
                              format: date-time,
                              example: "2024-05-15T06:56:46+00:00",
                            },
                          roles:
                            {
                              type: array,
                              items:
                                {
                                  type: object,
                                  properties:
                                    {
                                      name:
                                        { type: string, example: applicant },
                                      created_at:
                                        {
                                          type: string,
                                          format: date-time,
                                          example: "2024-05-15T06:56:46+00:00",
                                        },
                                      updated_at:
                                        {
                                          type: string,
                                          format: date-time,
                                          example: "2024-05-15T06:56:46+00:00",
                                        },
                                    },
                                },
                            },
                        },
                    }
  /requests:
    get:
      tags:
        - guests
      summary: "Get all system requests"
      description: "Get all requests"
      operationId: getAllRequests
      parameters:
        - name: "filter[type]"
          in: query
          description: "The type of request"
          required: false
          schema:
            type: string
            enum:
              - buy
              - sell
            example: buy
        - name: "filter[payment_method][0]"
          in: query
          description: "The type of payment_method"
          required: false
          schema:
            type: string
            enum:
              - foreign_bank
              - paypal
            example: paypal
        - name: "filter[payment_method][1]"
          in: query
          description: "The type of payment_method"
          required: false
          schema:
            type: string
            enum:
              - foreign_bank
              - paypal
            example: paypal
        - name: "filter[status]"
          in: query
          description: "The status of the request"
          required: false
          schema:
            type: string
            enum:
              - pending
              - processing
              - trading
              - canceled
            example: pending
        - name: "filter[volume_from]"
          in: query
          description: "The minimum volume range of the requests (0 - 100000)"
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 100000
            example: 150
        - name: "filter[volume_to]"
          in: query
          description: "The maximum volume range of the requests (0 - 100000)"
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 100000
            example: 150
        - name: sort
          in: query
          description: "The sort order of the results"
          required: false
          schema:
            type: string
            enum:
              - created_at
              - "-created_at"
              - price
              - "-price"
            example: "-created_at"
        - name: per_page
          in: query
          description: "Number of items to return per page"
          required: false
          schema:
            type: integer
            default: 15
        - name: page
          in: query
          description: "page number"
          required: false
          schema:
            type: integer
            default: 1
      responses:
        200:
          description: "The requests was retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - code
                  - message
                  - data
                properties:
                  status:
                    {
                      type: string,
                      description: "The status of the API response",
                      example: success,
                    }
                  code:
                    {
                      type: integer,
                      description: "The HTTP status code of the response",
                      example: 200,
                    }
                  message:
                    {
                      type: string,
                      description: "A descriptive message about the response",
                      example: "The requests were retrieved successfully.",
                    }
                  data:
                    {
                      type: object,
                      required: [items, pagination],
                      properties:
                        {
                          items:
                            {
                              type: array,
                              description: "Array of request items",
                              items:
                                {
                                  type: object,
                                  required:
                                    [
                                      ulid,
                                      number,
                                      volume,
                                      price,
                                      type,
                                      status,
                                      created_at,
                                      updated_at,
                                      payment_methods,
                                    ],
                                  properties:
                                    {
                                      ulid:
                                        {
                                          type: string,
                                          description: "Unique identifier for the request",
                                          example: 01J25YP7C2MTHAXNREE7FNPY85,
                                        },
                                      number:
                                        {
                                          type: string,
                                          description: "Request number",
                                          example: RE-953539,
                                        },
                                      volume:
                                        {
                                          type: string,
                                          description: "Volume of the request",
                                          example: "250.00",
                                        },
                                      price:
                                        {
                                          type: string,
                                          description: "Price of the request",
                                          example: "2000.00",
                                        },
                                      type:
                                        {
                                          type: string,
                                          enum: [buy, sell],
                                          description: "Type of the request (BUY or SELL)",
                                          example: BUY,
                                        },
                                      status:
                                        {
                                          type: string,
                                          enum:
                                            [
                                              pending,
                                              processing,
                                              trading,
                                              canceled,
                                            ],
                                          description: "Status of the request",
                                          example: pending,
                                        },
                                      created_at:
                                        {
                                          type: string,
                                          format: date-time,
                                          description: "Creation timestamp",
                                          example: "2024-07-07T06:38:04.000000Z",
                                        },
                                      updated_at:
                                        {
                                          type: string,
                                          format: date-time,
                                          description: "Last update timestamp",
                                          example: "2024-07-07T06:38:04.000000Z",
                                        },
                                      payment_methods:
                                        {
                                          type: object,
                                          required: [items, pagination],
                                          properties:
                                            {
                                              items:
                                                {
                                                  type: array,
                                                  description: "Array of payment method items",
                                                  items:
                                                    {
                                                      type: object,
                                                      required:
                                                        [ulid, payment_method],
                                                      properties:
                                                        {
                                                          ulid:
                                                            {
                                                              type: string,
                                                              description: "Unique identifier for the payment method",
                                                              example: 01J25YKXXAS0KX1W4383HE65GR,
                                                            },
                                                          payment_method:
                                                            {
                                                              type: object,
                                                              required:
                                                                [
                                                                  type,
                                                                  holder_name,
                                                                  bank_name,
                                                                  card_number,
                                                                  sheba,
                                                                  account_no,
                                                                  is_active,
                                                                  icon,
                                                                  created_at,
                                                                  updated_at,
                                                                ],
                                                              properties:
                                                                {
                                                                  type:
                                                                    {
                                                                      type: string,
                                                                      description: "Type of payment method",
                                                                      example: rial_bank,
                                                                    },
                                                                  holder_name:
                                                                    {
                                                                      type: string,
                                                                      description: "Name of the account holder",
                                                                      example: "",
                                                                    },
                                                                  bank_name:
                                                                    {
                                                                      type: string,
                                                                      description: "Name of the bank",
                                                                      example: "",
                                                                    },
                                                                  card_number:
                                                                    {
                                                                      type: string,
                                                                      description: "Card number",
                                                                      example: "",
                                                                    },
                                                                  sheba:
                                                                    {
                                                                      type: string,
                                                                      description: "SHEBA number",
                                                                      example: "",
                                                                    },
                                                                  account_no:
                                                                    {
                                                                      type: string,
                                                                      description: "Account number",
                                                                      example: "",
                                                                    },
                                                                  is_active:
                                                                    {
                                                                      type: boolean,
                                                                      description: "Whether the payment method is active",
                                                                      example: false,
                                                                    },
                                                                  icon:
                                                                    {
                                                                      type: string,
                                                                      description: "payment method icon url",
                                                                    },
                                                                  created_at:
                                                                    {
                                                                      type: string,
                                                                      format: date-time,
                                                                      description: "Creation timestamp",
                                                                      example: "2024-07-07T06:38:04.000000Z",
                                                                    },
                                                                  updated_at:
                                                                    {
                                                                      type: string,
                                                                      format: date-time,
                                                                      description: "Last update timestamp",
                                                                      example: "2024-07-07T06:38:04.000000Z",
                                                                    },
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                },
                            },
                          pagination:
                            {
                              type: object,
                              required:
                                [
                                  current_page,
                                  first_page_url,
                                  from,
                                  last_page,
                                  last_page_url,
                                  next_page_url,
                                  path,
                                  per_page,
                                  prev_page_url,
                                  to,
                                  total,
                                ],
                              properties:
                                {
                                  current_page:
                                    {
                                      type: integer,
                                      description: "Current page number",
                                      example: 1,
                                    },
                                  first_page_url:
                                    {
                                      type: string,
                                      description: "URL of the first page",
                                      example: "http://localhost:8000/api/v1/users/requests?page=1",
                                    },
                                  from:
                                    {
                                      type: integer,
                                      description: "Start index of items on current page",
                                      example: 1,
                                    },
                                  last_page:
                                    {
                                      type: integer,
                                      description: "Last page number",
                                      example: 1,
                                    },
                                  last_page_url:
                                    {
                                      type: string,
                                      description: "URL of the last page",
                                      example: "http://localhost:8000/api/v1/users/requests?page=1",
                                    },
                                  next_page_url:
                                    {
                                      type: string,
                                      nullable: true,
                                      description: "URL of the next page",
                                      example: null,
                                    },
                                  path:
                                    {
                                      type: string,
                                      description: "Base path for pagination URLs",
                                      example: "http://localhost:8000/api/v1/users/requests",
                                    },
                                  per_page:
                                    {
                                      type: integer,
                                      description: "Number of items per page",
                                      example: 15,
                                    },
                                  prev_page_url:
                                    {
                                      type: string,
                                      nullable: true,
                                      description: "URL of the previous page",
                                      example: null,
                                    },
                                  to:
                                    {
                                      type: integer,
                                      description: "End index of items on current page",
                                      example: 6,
                                    },
                                  total:
                                    {
                                      type: integer,
                                      description: "Total number of items",
                                      example: 6,
                                    },
                                },
                            },
                        },
                    }
  /users/payment-methods:
    get:
      tags:
        - "payment methods"
      summary: "Get all payment methods"
      description: "This endpoint retrieve all payment methods."
      operationId: getUserPaymentMethods
      parameters:
        - name: per_page
          in: query
          description: "Number of items to return per page"
          required: false
          schema:
            type: integer
            default: 15
        - name: page
          in: query
          description: "page number"
          required: false
          schema:
            type: integer
            default: 1
      responses:
        200:
          description: "The payment methods was retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - code
                  - message
                  - data
                properties:
                  status:
                    {
                      type: string,
                      description: "The status of the API response",
                      example: success,
                    }
                  code:
                    {
                      type: integer,
                      description: "The HTTP status code of the response",
                      example: 200,
                    }
                  message:
                    {
                      type: string,
                      description: "A descriptive message about the response",
                      example: "The requests were retrieved successfully.",
                    }
                  data:
                    {
                      type: object,
                      required: [items, pagination],
                      properties:
                        {
                          items:
                            {
                              type: array,
                              description: "Array of request items",
                              items:
                                {
                                  type: object,
                                  required: [ulid, payment_method],
                                  properties:
                                    {
                                      ulid:
                                        {
                                          type: string,
                                          description: "Unique identifier for the request",
                                          example: 01J25YP7C2MTHAXNREE7FNPY85,
                                        },
                                      payment_method:
                                        {
                                          type: object,
                                          required:
                                            [
                                              type,
                                              holder_name,
                                              bank_name,
                                              card_number,
                                              sheba,
                                              account_no,
                                              is_active,
                                              icon,
                                              created_at,
                                              updated_at,
                                            ],
                                          properties:
                                            {
                                              type:
                                                {
                                                  type: string,
                                                  description: "Type of payment method",
                                                  example: rial_bank,
                                                },
                                              holder_name:
                                                {
                                                  type: string,
                                                  description: "Name of the account holder",
                                                  example: "",
                                                },
                                              bank_name:
                                                {
                                                  type: string,
                                                  description: "Name of the bank",
                                                  example: "",
                                                },
                                              card_number:
                                                {
                                                  type: string,
                                                  description: "Card number",
                                                  example: "",
                                                },
                                              sheba:
                                                {
                                                  type: string,
                                                  description: "SHEBA number",
                                                  example: "",
                                                },
                                              account_no:
                                                {
                                                  type: string,
                                                  description: "Account number",
                                                  example: "",
                                                },
                                              is_active:
                                                {
                                                  type: boolean,
                                                  description: "Whether the payment method is active",
                                                  example: false,
                                                },
                                              icon:
                                                {
                                                  type: string,
                                                  description: "payment method icon url",
                                                },
                                              created_at:
                                                {
                                                  type: string,
                                                  format: date-time,
                                                  description: "Creation timestamp",
                                                  example: "2024-07-07T06:38:04.000000Z",
                                                },
                                              updated_at:
                                                {
                                                  type: string,
                                                  format: date-time,
                                                  description: "Last update timestamp",
                                                  example: "2024-07-07T06:38:04.000000Z",
                                                },
                                            },
                                        },
                                    },
                                },
                            },
                          pagination:
                            {
                              type: object,
                              required:
                                [
                                  current_page,
                                  first_page_url,
                                  from,
                                  last_page,
                                  last_page_url,
                                  next_page_url,
                                  path,
                                  per_page,
                                  prev_page_url,
                                  to,
                                  total,
                                ],
                              properties:
                                {
                                  current_page:
                                    {
                                      type: integer,
                                      description: "Current page number",
                                      example: 1,
                                    },
                                  first_page_url:
                                    {
                                      type: string,
                                      description: "URL of the first page",
                                      example: "http://localhost:8000/api/v1/users/requests?page=1",
                                    },
                                  from:
                                    {
                                      type: integer,
                                      description: "Start index of items on current page",
                                      example: 1,
                                    },
                                  last_page:
                                    {
                                      type: integer,
                                      description: "Last page number",
                                      example: 1,
                                    },
                                  last_page_url:
                                    {
                                      type: string,
                                      description: "URL of the last page",
                                      example: "http://localhost:8000/api/v1/users/requests?page=1",
                                    },
                                  next_page_url:
                                    {
                                      type: string,
                                      nullable: true,
                                      description: "URL of the next page",
                                      example: null,
                                    },
                                  path:
                                    {
                                      type: string,
                                      description: "Base path for pagination URLs",
                                      example: "http://localhost:8000/api/v1/users/requests",
                                    },
                                  per_page:
                                    {
                                      type: integer,
                                      description: "Number of items per page",
                                      example: 15,
                                    },
                                  prev_page_url:
                                    {
                                      type: string,
                                      nullable: true,
                                      description: "URL of the previous page",
                                      example: null,
                                    },
                                  to:
                                    {
                                      type: integer,
                                      description: "End index of items on current page",
                                      example: 6,
                                    },
                                  total:
                                    {
                                      type: integer,
                                      description: "Total number of items",
                                      example: 6,
                                    },
                                },
                            },
                        },
                    }
                example:
                  status: success
                  code: 200
                  message: "The payment methods was retrieved successfully."
                  data:
                    {
                      items:
                        [
                          {
                            ulid: 01HZYTZ1EGA71BRQ9E844VMD52,
                            payment_method:
                              {
                                type: rial_bank,
                                holder_name: "122222",
                                bank_name: رسالت,
                                card_number: "6274129005473742",
                                sheba: IR062960000000100324200001,
                                account_no: "10996491",
                                is_active: true,
                                created_at: "2024-06-09T15:48:09.000000Z",
                                updated_at: "2024-06-09T15:48:09.000000Z",
                              },
                          },
                          {
                            ulid: 01HZYTZV0BMEB0JMXZW7MBF3SD,
                            payment_method:
                              {
                                type: paypal,
                                holder_name: "122222",
                                email: test@test.com,
                                is_active: true,
                                created_at: "2024-06-09T15:48:35.000000Z",
                                updated_at: "2024-06-09T15:48:35.000000Z",
                              },
                          },
                        ],
                      pagination:
                        {
                          current_page: 1,
                          first_page_url: "http://localhost:8000/api/v1/users/payment-methods?page=1",
                          from: 1,
                          last_page: 1,
                          last_page_url: "http://localhost:8000/api/v1/users/payment-methods?page=1",
                          next_page_url: null,
                          path: "http://localhost:8000/api/v1/users/payment-methods",
                          per_page: 15,
                          prev_page_url: null,
                          to: 2,
                          total: 2,
                        },
                    }
    post:
      tags:
        - "payment methods"
      summary: "Create a new payment method"
      description: "This endpoint allows users to create a new payment method by providing the necessary details based on the selected payment method type (Rial bank, Foreign bank, or paypal)."
      operationId: createUserPaymentMethod
      parameters: {}
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - type
                - holder_name
                - is_active
              properties:
                type:
                  type: string
                  description: "The type of payment method, Rial Bank: 1 | Foreign Bank:2 | Paypal: 3"
                  enum: [1, 2, 3]
                  example: 1
                card_number:
                  type: string
                  description: "The card number (required if type is Rial Bank)"
                  example: "6274129005473742"
                sheba:
                  type: string
                  description: "The Sheba number (required if type is Rial Bank)"
                  example: IR062960000000100324200001
                account_no:
                  type: string
                  description: "The account number"
                  example: "10996491"
                iban:
                  type: string
                  description: "The IBAN (required if type is Foreign Bank)"
                  example: DE89370400440532013000
                bic:
                  type: string
                  description: "The BIC (required if type is Foreign Bank)"
                  example: DEUTDEFF
                email:
                  type: string
                  format: email
                  description: "The email address (required if type is Paypal)"
                  example: john.doe@example.com
                holder_name:
                  type: string
                  description: "The name of the account holder"
                  example: "John Doe"
                bank_name:
                  type: string
                  description: "The name of the bank (required if type is Rial Bank or Foreign Bank)"
                  example: "Bank Melli Iran"
                is_active:
                  type: integer
                  enum: [0, 1]
                  description: "Indicates if the payment method is active. Inactive: 0 | Active: 1"
                  example: 1
      responses:
        201:
          description: "Payment method created successfully"
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  code: 201
                  message: "The payment method was created successfully."
                  data:
                    {
                      ulid: 01HZYR20ZBGKWCBGQDVG0TCFED,
                      payment_method:
                        {
                          type: rial_bank,
                          holder_name: "Ali Parvin",
                          bank_name: Resalat,
                          card_number: "6274129005473742",
                          sheba: IR062960000000100324200001,
                          account_no: "10996491",
                          is_active: true,
                          created_at: "2024-06-09T14:57:21.000000Z",
                          updated_at: "2024-06-09T14:57:21.000000Z",
                        },
                    }
  "/users/payment-methods/{paymentMethod}":
    get:
      tags:
        - "payment methods"
      summary: "Get a payment method by ULID"
      description: "This endpoint retrieve a payment method by ULID."
      operationId: getUserPaymentMethod
      parameters:
        - name: paymentMethod
          in: path
          required: true
          description: "The ULID of the payment method."
          schema:
            type: string
      responses:
        200:
          description: "The user's payment method was retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  code: 200
                  message: "The user's payment method was retrieved successfully."
                  data:
                    {
                      ulid: 01HZYR20ZBGKWCBGQDVG0TCFED,
                      payment_method:
                        {
                          type: rial_bank,
                          holder_name: "122222",
                          bank_name: Resalat,
                          card_number: "6274129005473742",
                          sheba: IR062960000000100324200001,
                          account_no: "10996491",
                          is_active: true,
                          created_at: "2024-06-09T14:57:21.000000Z",
                          updated_at: "2024-06-09T15:05:48.000000Z",
                        },
                    }
    put:
      tags:
        - "payment methods"
      summary: "Update a user's payment method"
      description: "Update a specific payment method of the authenticated user."
      operationId: UpdateUserPaymentMethod
      parameters:
        - name: paymentMethod
          in: path
          required: true
          description: "The ULID of the payment method to update."
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - holder_name
                - is_active
              properties:
                card_number:
                  type: string
                  description: "The card number (required if type is Rial Bank)"
                  example: "6274129005473742"
                sheba:
                  type: string
                  description: "The Sheba number (required if type is Rial Bank)"
                  example: IR062960000000100324200001
                account_no:
                  type: string
                  description: "The account number"
                  example: "10996491"
                iban:
                  type: string
                  description: "The IBAN (required if type is Foreign Bank)"
                  example: DE89370400440532013000
                bic:
                  type: string
                  description: "The BIC (required if type is Foreign Bank)"
                  example: DEUTDEFF
                email:
                  type: string
                  format: email
                  description: "The email address (required if type is Paypal)"
                  example: john.doe@example.com
                holder_name:
                  type: string
                  description: "The name of the account holder"
                  example: "John Doe"
                bank_name:
                  type: string
                  description: "The name of the bank (required if type is Rial Bank or Foreign Bank)"
                  example: "Bank Melli Iran"
                icon:
                  type: string
                  description: "payment method icon url"
                is_active:
                  type: integer
                  enum: [0, 1]
                  description: "Indicates if the payment method is active. Inactive: 0 | Active: 1"
                  example: 1
      responses:
        200:
          description: "The payment method was updated successfully."
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  code: 200
                  message: "The payment method was updated successfully."
                  data:
                    {
                      ulid: 01J03T8BFA0FMRB3S3D75FB900,
                      payment_method:
                        {
                          type: rial_bank,
                          holder_name: "Mehrdad Nateghi",
                          bank_name: Resalat,
                          card_number: "5041951019781245",
                          sheba: IR410200030500111099649001,
                          account_no: "109964910",
                          icon: not-defined,
                          is_active: true,
                          created_at: "2024-06-11T14:11:58.000000Z",
                          updated_at: "2024-06-11T15:02:17.000000Z",
                        },
                    }
    delete:
      tags:
        - "payment methods"
      summary: "Delete a user's payment method"
      description: "Deletes a specific payment method of the authenticated user."
      operationId: deleteUserPaymentMethod
      parameters:
        - name: paymentMethod
          in: path
          required: true
          description: "The ULID of the payment method to delete."
          schema:
            type: string
      responses:
        200:
          description: "The user's payment methods was deleted successfully."
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  code: 200
                  message: "The user's payment method was deleted successfully."
                  data: null
  /auth/send-code:
    post:
      tags:
        - auth
      summary: "Send Verification Code"
      description: "Send a verification code to the specified email or mobile(Not support yet)"
      operationId: sendCode
      parameters: {}
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                to:
                  type: string
                  format: email
                  description: "The email or mobile(Not support yet) to send the verification code to."
                  example: example@email.com
                via:
                  type: integer
                  enum: [1]
                  description: "The delivery method for the verification code. 1: EMAIL | 2: MOBILE"
                type:
                  type: integer
                  enum: [1, 2]
                  description: "Type of verification. 1: SET_PASSWORD | 2: RESET_PASSWORD"
                g-recaptcha-response:
                  type: string
                  description: "The reCAPTCHA response from the client."
                  default: 03AGdBq24XvxmBsQ8jd2LhfQhPUwUGJx_6PxqY3GQxNM6xXX6xXXpqYjZhgA
              required:
                - to
                - via
                - type
                - g-recaptcha-response
      responses:
        201:
          description: "Created Successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    {
                      type: string,
                      description: "The status of the operation",
                      example: success,
                    }
                  code:
                    {
                      type: integer,
                      description: "The HTTP status code",
                      example: 201,
                    }
                  message:
                    {
                      type: string,
                      description: "A descriptive message about the operation result",
                      example: "Verification code sent successfully",
                    }
                  data:
                    {
                      type: null,
                      description: "Additional data (null in this case)",
                      example: null,
                    }
                required:
                  - status
                  - code
                  - message
                  - data
  /auth/resend-code:
    post:
      tags:
        - auth
      summary: "Resend Verification Code"
      description: "Resend a verification code to the specified recipient."
      operationId: resendCode
      parameters: {}
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                to:
                  type: string
                  default: example@example.com
                  description: "The recipient's email or mobile number(Not support yet)"
                via:
                  type: string
                  enum: [1]
                  description: "The delivery method for the verification code. 1: EMAIL"
                type:
                  type: string
                  enum: [1, 2]
                  description: "Type of verification. **Possible Values:**  1: SET_PASSWORD | 2: RESET_PASSWORD"
              required:
                - to
                - via
                - type
      responses:
        201:
          description: "Created Successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    {
                      type: string,
                      description: "The status of the operation",
                      example: success,
                    }
                  code:
                    {
                      type: integer,
                      description: "The HTTP status code",
                      example: 201,
                    }
                  message:
                    {
                      type: string,
                      description: "A descriptive message about the operation result",
                      example: "Verification code sent successfully",
                    }
                  data:
                    {
                      type: null,
                      description: "Additional data (null in this case)",
                      example: null,
                    }
                required:
                  - status
                  - code
                  - message
                  - data
  /auth/verify-code:
    post:
      tags:
        - auth
      summary: "Verify verification code"
      description: "Used to verify a verification code sent to the user's email or mobile number for resetting their password."
      operationId: verifyCode
      parameters: {}
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: "Verification code sent to the user. This code is typically a 6-digit."
                  example: "541236"
                to:
                  type: string
                  description: "User's email address or mobile number where the verification code was sent. Must be a valid email address or mobile number format depending on the chosen 'via' method. Not support mobile yet!"
                  example: a@a.com
                via:
                  type: integer
                  description: "Verification via. 1: EMAIL"
                  enum: [1]
                type:
                  description: "Type of verification. 2: RESET_PASSWORD"
                  enum: [2]
              required:
                - code
                - to
                - via
                - type
      responses:
        200:
          description: "Created Successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    {
                      type: string,
                      description: "The status of the operation",
                      example: success,
                    }
                  code:
                    {
                      type: integer,
                      description: "The HTTP status code",
                      example: 200,
                    }
                  message:
                    {
                      type: string,
                      description: "A descriptive message about the operation result",
                      example: "User signed up successfully.",
                    }
                  data:
                    {
                      type: object,
                      description: "Object containing user information and access token",
                      properties:
                        {
                          user:
                            {
                              type: object,
                              description: "User details",
                              properties:
                                {
                                  ulid:
                                    {
                                      type: string,
                                      description: "Unique identifier for the user",
                                      example: 01HZA0X41HX5CXY2YWD4GP0WAG,
                                    },
                                  first_name:
                                    {
                                      type: string,
                                      description: "User's first name",
                                      example: null,
                                    },
                                  last_name:
                                    {
                                      type: string,
                                      description: "User's last name",
                                      example: null,
                                    },
                                  email:
                                    {
                                      type: string,
                                      description: "User's email address",
                                      example: a@b.com,
                                    },
                                  status:
                                    {
                                      type: string,
                                      description: "User's account status",
                                      example: active,
                                    },
                                  created_at:
                                    {
                                      type: string,
                                      format: date-time,
                                      description: "Timestamp of user creation",
                                      example: "2024-05-15T06:56:46+00:00",
                                    },
                                  updated_at:
                                    {
                                      type: string,
                                      format: date-time,
                                      description: "Timestamp of last user update",
                                      example: "2024-05-15T06:56:46+00:00",
                                    },
                                },
                              required:
                                [
                                  ulid,
                                  first_name,
                                  last_name,
                                  email,
                                  status,
                                  created_at,
                                  updated_at,
                                ],
                            },
                          token:
                            {
                              type: object,
                              description: "Authentication token information",
                              properties:
                                {
                                  access_token:
                                    {
                                      type: string,
                                      description: "New access token",
                                      example: eyJ0eXAiOiJKV1...,
                                    },
                                  type:
                                    {
                                      type: string,
                                      description: "Token type",
                                      example: Bearer,
                                    },
                                  expires_at:
                                    {
                                      type: string,
                                      format: date-time,
                                      description: "Token expiration timestamp",
                                      example: "2024-06-23 06:31:30",
                                    },
                                },
                              required: [access_token, type, expires_at],
                            },
                        },
                      required: [user, token],
                    }
                required:
                  - status
                  - code
                  - message
                  - data
  /auth/signup:
    post:
      tags:
        - auth
      summary: "Verify and sign up a new user."
      description: "Verify and sign up a new user."
      operationId: signup
      parameters: {}
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: "Verification code sent to the user. This code is typically a 6-digit."
                  example: "541236"
                to:
                  type: string
                  description: "User's email address or mobile number where the verification code was sent. Must be a valid email address or mobile number format depending on the chosen 'via' method. Not support mobile yet!"
                  example: a@a.com
                via:
                  type: integer
                  description: "Verification via. **Possible Values:**  1: EMAIL"
                  enum: [1]
                type:
                  description: "Type of verification. **Possible Values:**  1: SET_PASSWORD"
                  enum: [1]
              required:
                - code
                - to
                - via
                - type
      responses:
        200:
          description: "Created Successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    {
                      type: string,
                      description: "The status of the operation",
                      example: success,
                    }
                  code:
                    {
                      type: integer,
                      description: "The HTTP status code",
                      example: 200,
                    }
                  message:
                    {
                      type: string,
                      description: "A descriptive message about the operation result",
                      example: "User signed up successfully.",
                    }
                  data:
                    {
                      type: object,
                      description: "Object containing user information and access token",
                      properties:
                        {
                          user:
                            {
                              type: object,
                              description: "User details",
                              properties:
                                {
                                  ulid:
                                    {
                                      type: string,
                                      description: "Unique identifier for the user",
                                      example: 01HZA0X41HX5CXY2YWD4GP0WAG,
                                    },
                                  first_name:
                                    {
                                      type: string,
                                      description: "User's first name",
                                      example: null,
                                    },
                                  last_name:
                                    {
                                      type: string,
                                      description: "User's last name",
                                      example: null,
                                    },
                                  email:
                                    {
                                      type: string,
                                      description: "User's email address",
                                      example: a@b.com,
                                    },
                                  status:
                                    {
                                      type: string,
                                      description: "User's account status",
                                      example: active,
                                    },
                                  created_at:
                                    {
                                      type: string,
                                      format: date-time,
                                      description: "Timestamp of user creation",
                                      example: "2024-05-15T06:56:46+00:00",
                                    },
                                  updated_at:
                                    {
                                      type: string,
                                      format: date-time,
                                      description: "Timestamp of last user update",
                                      example: "2024-05-15T06:56:46+00:00",
                                    },
                                },
                              required:
                                [
                                  ulid,
                                  first_name,
                                  last_name,
                                  email,
                                  status,
                                  created_at,
                                  updated_at,
                                ],
                            },
                          token:
                            {
                              type: object,
                              description: "Authentication token information",
                              properties:
                                {
                                  access_token:
                                    {
                                      type: string,
                                      description: "New access token",
                                      example: eyJ0eXAiOiJKV1...,
                                    },
                                  type:
                                    {
                                      type: string,
                                      description: "Token type",
                                      example: Bearer,
                                    },
                                  expires_at:
                                    {
                                      type: string,
                                      format: date-time,
                                      description: "Token expiration timestamp",
                                      example: "2024-06-23 06:31:30",
                                    },
                                },
                              required: [access_token, type, expires_at],
                            },
                        },
                      required: [user, token],
                    }
                required:
                  - status
                  - code
                  - message
                  - data
  /auth/set-password:
    post:
      tags:
        - auth
      summary: "Set user password"
      description: "This endpoint allows an authenticated user to set a new password for their account."
      operationId: setPassword
      parameters: {}
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                password:
                  type: string
                  minLength: 8
                  description: "The new password for the user account. **Possible Values:** at least 8 characters. | mixed number and letter."
                  example: 123a456b
                password_confirmation:
                  type: string
                  minLength: 8
                  description: "Repeat password"
                  example: 123a456b
              required:
                - password
                - password_confirmation
      responses:
        200:
          description: "Created Successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    {
                      type: string,
                      description: "The status of the operation",
                      example: success,
                    }
                  code:
                    {
                      type: integer,
                      description: "The HTTP status code",
                      example: 200,
                    }
                  message:
                    {
                      type: string,
                      description: "A descriptive message about the operation result",
                      example: "Password has been set successfully.",
                    }
                  data:
                    {
                      type: object,
                      description: "Object containing user information",
                      properties:
                        {
                          user:
                            {
                              type: object,
                              description: "User details",
                              properties:
                                {
                                  ulid:
                                    {
                                      type: string,
                                      description: "Unique identifier for the user",
                                      example: 01J11WDAS03P9W7JE2X3TZEJ7R,
                                    },
                                  first_name:
                                    {
                                      type: string,
                                      description: "User's first name",
                                      example: null,
                                    },
                                  last_name:
                                    {
                                      type: string,
                                      description: "User's last name",
                                      example: null,
                                    },
                                  email:
                                    {
                                      type: string,
                                      description: "User's email address",
                                      example: 2@gmail.com,
                                    },
                                  status:
                                    {
                                      type: string,
                                      description: "User's account status",
                                      example: active,
                                    },
                                  created_at:
                                    {
                                      type: string,
                                      format: date-time,
                                      description: "Timestamp of user creation",
                                      example: "2024-06-23T06:26:51.000000Z",
                                    },
                                  updated_at:
                                    {
                                      type: string,
                                      format: date-time,
                                      description: "Timestamp of last user update",
                                      example: "2024-06-23T06:27:23.000000Z",
                                    },
                                  roles:
                                    {
                                      type: array,
                                      description: "User's roles",
                                      items:
                                        {
                                          type: object,
                                          properties:
                                            {
                                              name:
                                                {
                                                  type: string,
                                                  description: "Name of the role",
                                                  example: applicant,
                                                },
                                              created_at:
                                                {
                                                  type: string,
                                                  format: date-time,
                                                  description: "Timestamp of role creation",
                                                  example: "2024-06-22T13:46:57.000000Z",
                                                },
                                              updated_at:
                                                {
                                                  type: string,
                                                  format: date-time,
                                                  description: "Timestamp of last role update",
                                                  example: "2024-06-22T13:46:57.000000Z",
                                                },
                                            },
                                          required:
                                            [name, created_at, updated_at],
                                        },
                                    },
                                },
                              required:
                                [
                                  ulid,
                                  first_name,
                                  last_name,
                                  email,
                                  status,
                                  created_at,
                                  updated_at,
                                  roles,
                                ],
                            },
                        },
                      required: [user],
                    }
                required:
                  - status
                  - code
                  - message
                  - data
  /auth/login:
    post:
      tags:
        - auth
      summary: "Login User"
      description: "Allows a user to log in using their email and password."
      operationId: login
      parameters: {}
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: "The user's email."
                  default: example@example.com
                password:
                  type: string
                  minLength: 8
                  description: "The user's password."
                  example: 123a456b
                g-recaptcha-response:
                  type: string
                  description: "The reCAPTCHA response from the client."
                  default: 03AGdBq24XvxmBsQ8jd2LhfQhPUwUGJx_6PxqY3GQxNM6xXX6xXXpqYjZhgA
              required:
                - email
                - password
                - g-recaptcha-response
      responses:
        200:
          description: "User logged in successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    {
                      type: string,
                      description: "The status of the operation",
                      example: success,
                    }
                  code:
                    {
                      type: integer,
                      description: "The HTTP status code",
                      example: 200,
                    }
                  message:
                    {
                      type: string,
                      description: "A descriptive message about the operation result",
                      example: "User logged in successfully.",
                    }
                  data:
                    {
                      type: object,
                      description: "Object containing user information and token",
                      properties:
                        {
                          user:
                            {
                              type: object,
                              description: "User details",
                              properties:
                                {
                                  ulid:
                                    {
                                      type: string,
                                      description: "Unique identifier for the user",
                                      example: 01J11WDAS03P9W7JE2X3TZEJ7R,
                                    },
                                  first_name:
                                    {
                                      type: string,
                                      description: "User's first name",
                                      example: null,
                                    },
                                  last_name:
                                    {
                                      type: string,
                                      description: "User's last name",
                                      example: null,
                                    },
                                  email:
                                    {
                                      type: string,
                                      description: "User's email address",
                                      example: example@example.com,
                                    },
                                  status:
                                    {
                                      type: string,
                                      description: "User's account status",
                                      example: active,
                                    },
                                  created_at:
                                    {
                                      type: string,
                                      format: date-time,
                                      description: "Timestamp of user creation",
                                      example: "2024-06-23T06:26:51.000000Z",
                                    },
                                  updated_at:
                                    {
                                      type: string,
                                      format: date-time,
                                      description: "Timestamp of last user update",
                                      example: "2024-06-23T06:27:23.000000Z",
                                    },
                                  roles:
                                    {
                                      type: array,
                                      description: "User's roles",
                                      items:
                                        {
                                          type: object,
                                          properties:
                                            {
                                              name:
                                                {
                                                  type: string,
                                                  description: "Name of the role",
                                                  example: applicant,
                                                },
                                              created_at:
                                                {
                                                  type: string,
                                                  format: date-time,
                                                  description: "Timestamp of role creation",
                                                  example: "2024-06-22T13:46:57.000000Z",
                                                },
                                              updated_at:
                                                {
                                                  type: string,
                                                  format: date-time,
                                                  description: "Timestamp of last role update",
                                                  example: "2024-06-22T13:46:57.000000Z",
                                                },
                                            },
                                          required:
                                            [name, created_at, updated_at],
                                        },
                                    },
                                },
                              required:
                                [
                                  ulid,
                                  first_name,
                                  last_name,
                                  email,
                                  status,
                                  created_at,
                                  updated_at,
                                  roles,
                                ],
                            },
                          token:
                            {
                              type: object,
                              description: "Authentication token information",
                              properties:
                                {
                                  access_token:
                                    {
                                      type: string,
                                      description: "access token",
                                      example: eyJ0eXAiOiJKV1...,
                                    },
                                  type:
                                    {
                                      type: string,
                                      description: "Token type",
                                      example: Bearer,
                                    },
                                  expires_at:
                                    {
                                      type: string,
                                      format: date-time,
                                      description: "Token expiration timestamp",
                                      example: "2024-06-23 07:17:15",
                                    },
                                },
                              required: [access_token, type, expires_at],
                            },
                        },
                      required: [user, token],
                    }
                required:
                  - status
                  - code
                  - message
                  - data
  /auth/refresh-token:
    post:
      tags:
        - auth
      summary: "Refresh access token"
      description: "Refreshes the user's access token using the refresh token stored in an HTTP-only cookie"
      operationId: refreshToken
      responses:
        200:
          description: "The payment methods was retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    {
                      type: string,
                      description: "The status of the operation",
                      example: success,
                    }
                  code:
                    {
                      type: integer,
                      description: "The HTTP status code",
                      example: 200,
                    }
                  message:
                    {
                      type: string,
                      description: "A descriptive message about the operation result",
                      example: "Access token has been successfully refreshed.",
                    }
                  data:
                    {
                      type: object,
                      description: "Object containing the refreshed token information",
                      properties:
                        {
                          token:
                            {
                              type: object,
                              description: "Refreshed authentication token information",
                              properties:
                                {
                                  access_token:
                                    {
                                      type: string,
                                      description: "New access token",
                                      example: eyJ0eXAiOiJKV1...,
                                    },
                                  type:
                                    {
                                      type: string,
                                      description: "Token type",
                                      example: Bearer,
                                    },
                                  expires_at:
                                    {
                                      type: string,
                                      format: date-time,
                                      description: "Token expiration timestamp",
                                      example: "2024-06-23 06:31:30",
                                    },
                                },
                              required: [access_token, type, expires_at],
                            },
                        },
                      required: [token],
                    }
                required:
                  - status
                  - code
                  - message
                  - data
  /auth/logout:
    post:
      tags:
        - auth
      summary: "Log out user"
      description: "Logs out the current user."
      operationId: logout
      responses:
        200:
          description: "Successful logout"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    {
                      type: string,
                      description: "The status of the operation",
                      example: success,
                    }
                  code:
                    {
                      type: integer,
                      description: "The HTTP status code",
                      example: 200,
                    }
                  message:
                    {
                      type: string,
                      description: "A descriptive message about the operation result",
                      example: "You have been successfully logged out.",
                    }
                  data:
                    {
                      type: null,
                      description: "Additional data (null in this case)",
                      example: null,
                    }
                required:
                  - status
                  - code
                  - message
                  - data
  /health:
    get:
      tags:
        - global
      summary: "Check system health"
      description: "Performs a series of checks to ensure the system is functioning correctly."
      operationId: healthCheck
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  code: { type: integer, example: 200 }
                  message:
                    {
                      type: string,
                      example: "System health check passed successfully.",
                    }
                  data:
                    {
                      type: object,
                      properties:
                        {
                          overall_status: { type: string, example: ok },
                          checks:
                            {
                              type: object,
                              properties:
                                {
                                  database: { type: string, example: ok },
                                  redis: { type: string, example: ok },
                                  cache: { type: string, example: ok },
                                  queue: { type: string, example: ok },
                                },
                            },
                        },
                    }
  /daily-rate-range:
    get:
      tags:
        - global
      summary: "Get daily rate range"
      description: ""
      operationId: getDailyRateRange
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  code: { type: integer, example: 200 }
                  message:
                    {
                      type: string,
                      example: "The daily rate range was retrieved successfully.",
                    }
                  data:
                    {
                      type: object,
                      properties:
                        {
                          min: { type: integer, example: 56763 },
                          max: { type: integer, example: 69377 },
                        },
                    }
  /temp:
    get:
      tags:
        - global
      summary: Temp
      description: Temp
      operationId: healthTemp
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  code: { type: integer, example: 200 }
                  message:
                    {
                      type: string,
                      example: "System health check passed successfully.",
                    }
                  data:
                    {
                      type: object,
                      properties:
                        {
                          overall_status: { type: string, example: ok },
                          checks:
                            {
                              type: object,
                              properties:
                                {
                                  database: { type: string, example: ok },
                                  redis: { type: string, example: ok },
                                  cache: { type: string, example: ok },
                                  queue: { type: string, example: ok },
                                },
                            },
                        },
                    }
