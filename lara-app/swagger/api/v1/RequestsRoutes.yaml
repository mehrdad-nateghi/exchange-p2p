"/users/requests":
  get:
    tags:
      - requests
    summary: "Get all requests"
    description: "Get all requests of a user"
    operationId: getUserRequests
    parameters:
      - $ref: "#/components/parameters/pageSize"
      - $ref: "#/components/parameters/pageNumber"
      - $ref: "#/components/parameters/requestSort"
      - $ref: "#/components/parameters/requestType"
      - $ref: "#/components/parameters/requestStatus"
    responses:
      "200":
        description: "The requests was retrieved successfully."
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Base200Response"
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      required:
                        - items
                        - pagination
                      properties:
                        pagination:
                          $ref: "#/components/schemas/Pagination"
                        items:
                          type: array
                          description: "Array of request items"
                          items:
                            $ref: "#/components/schemas/Request"
  post:
    tags:
      - requests
    summary: "Create a new request"
    description: "Create a new request with the specified details"
    operationId: createRequest
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - type
              - volume
              - price
              - payment_methods
            properties:
              type:
                type: integer
                description: "The type of request, Buy: 1 | Sell:2"
                enum:
                  - 1
                  - 2
                example: 1
              volume:
                type: integer
                description: "Volume of the request"
                example: "250"
              price:
                type: integer
                description: "Price of the request"
                example: "2000"
              payment_methods:
                type: array
                description: "Array of payment method ULIDs"
                items:
                  type: string
                example:
                  ["01J25YKXXAS0KX1W4383HE65GR", "01J25YKY0C2GHB2Y4BAESSTXQ6"]
    responses:
      "201":
        description: "Created Successfully"
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Base200Response"
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      $ref: "#/components/schemas/Request"

"/users/requests/{request}":
  get:
    tags:
      - requests
    summary: "Get a request by ULID"
    description: "This endpoint retrieve a request by ULID."
    operationId: getUserRequest
    parameters:
      - name: request
        in: path
        required: true
        description: "The ULID of the request."
        schema:
          type: string
    responses:
      "200":
        description: "The user's request was retrieved successfully."
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Base200Response"
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      $ref: "#/components/schemas/Request"
  delete:
    tags:
      - requests
    summary: "Delete a request by ULID"
    description: "This endpoint deletes a request by ULID."
    operationId: deleteUserRequest
    parameters:
      - name: request
        in: path
        required: true
        description: "The ULID of the request."
        schema:
          type: string
    responses:
      "200":
        description: "The user's request was deleted successfully."
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Base200Response"
                - type: object
                  properties:
                    data:
                      type: object
                      nullable: true

"users/requests/{request}/add/payment-method/{paymentMethod}":
  post:
    tags:
      - requests
    summary: Add payment method to a request
    description: Add a specific payment method to an existing request
    operationId: addPaymentMethodToRequest
    parameters:
      - name: request
        in: path
        required: true
        description: The ULID of the request
        schema:
          type: string
      - name: paymentMethod
        in: path
        required: true
        description: The ULID of the payment method to add
        schema:
          type: string
    responses:
      "200":
        description: Payment method successfully added to the request
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Base200Response"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/Request"
