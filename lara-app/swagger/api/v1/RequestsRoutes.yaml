"/users/requests":
  get:
    tags:
      - requests
    summary: "Get all requests"
    description: "Get all requests of a user"
    operationId: getUserRequests
    parameters:
      - name: filter[type]
        in: query
        description: The type of request
        required: false
        schema:
          type: string
          enum: [buy, sell]
          example: buy
      - name: filter[status]
        in: query
        description: The status of the request
        required: false
        schema:
          type: string
          enum: [pending, processing, trading, canceled]
          example: pending
      - name: sort
        in: query
        description: The sort order of the results
        required: false
        schema:
          type: string
          enum: [created_at, -created_at, price, -price]
          example: -created_at
      - name: per_page
        in: query
        description: "Number of items to return per page"
        required: false
        schema:
          type: integer
          default: 15
      - name: page
        in: query
        description: "page number"
        required: false
        schema:
          type: integer
          default: 1
    responses:
      "200":
        description: "The requests was retrieved successfully."
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Base200Response"
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      required:
                        - items
                        - pagination
                      properties:
                        pagination:
                          $ref: "#/components/schemas/Pagination"
                        items:
                          type: array
                          description: "Array of request items"
                          items:
                            $ref: "#/components/schemas/Request"
  post:
    tags:
      - requests
    summary: "Create a new request"
    description: "Create a new request with the specified details"
    operationId: createRequest
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - type
              - volume
              - price
              - payment_methods
            properties:
              type:
                type: integer
                description: "The type of request, Buy: 1 | Sell:2"
                enum:
                  - 1
                  - 2
                example: 1
              volume:
                type: integer
                description: "Volume of the request"
                example: "250"
              price:
                type: integer
                description: "Price of the request"
                example: "2000"
              payment_methods:
                type: array
                description: "Array of payment method ULIDs"
                items:
                  type: string
                example:
                  ["01J25YKXXAS0KX1W4383HE65GR", "01J25YKY0C2GHB2Y4BAESSTXQ6"]
    responses:
      "201":
        description: "Created Successfully"
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Base200Response"
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      $ref: "#/components/schemas/Request"

"/users/requests/{request}":
  get:
    tags:
      - requests
    summary: "Get a request by ULID"
    description: "This endpoint retrieve a request by ULID."
    operationId: getUserRequest
    parameters:
      - name: request
        in: path
        required: true
        description: "The ULID of the request."
        schema:
          type: string
    responses:
      "200":
        description: "The user's request was retrieved successfully."
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Base200Response"
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      $ref: "#/components/schemas/Request"
