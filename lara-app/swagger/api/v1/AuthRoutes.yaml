"/auth/send-code":
  post:
    tags:
      - auth
    summary: "Send Verification Code"
    description: "Send a verification code to the specified email or mobile(Not support yet)"
    operationId: sendCode
    parameters: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              to:
                type: string
                format: email
                description: "The email or mobile(Not support yet) to send the verification code to."
                example: example@email.com
              via:
                type: integer
                enum:
                  - 1
                description: "The delivery method for the verification code. 1: EMAIL | 2: MOBILE"
              type:
                type: integer
                enum:
                  - 1
                  - 2
                description: "Type of verification. 1: SET_PASSWORD | 2: RESET_PASSWORD"
              g-recaptcha-response:
                type: string
                description: "The reCAPTCHA response from the client."
                default: "03AGdBq24XvxmBsQ8jd2LhfQhPUwUGJx_6PxqY3GQxNM6xXX6xXXpqYjZhgA"
            required:
              - to
              - via
              - type
              - g-recaptcha-response
    responses:
      '201':
        description: "Created Successful"
        content:
          application/json:
            schema:
              type: object
              example: {
                "status": "success",
                "code": 201,
                "message": "Verification code sent successfully",
                "data": null
              }

"/auth/resend-code":
  post:
    tags:
      - auth
    summary: "Resend Verification Code"
    description: "Resend a verification code to the specified recipient."
    operationId: resendCode
    parameters: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              to:
                type: string
                default: "example@example.com"
                description: "The recipient's email or mobile number(Not support yet)"
              via:
                type: string
                enum:
                  - 1
                description: "The delivery method for the verification code. 1: EMAIL"
              type:
                type: string
                enum:
                  - 1
                  - 2
                description: "Type of verification. **Possible Values:**  1: SET_PASSWORD | 2: RESET_PASSWORD"
            required:
              - to
              - via
              - type
    responses:
      '201':
        description: "Created Successful"
        content:
          application/json:
            schema:
              type: object
              example: {
                "status": "success",
                "code": 201,
                "message": "Verification code sent successfully",
                "data": null
              }

"/auth/verify-code":
  post:
    tags:
      - auth
    summary: "Verify verification code"
    description: "Used to verify a verification code sent to the user's email or mobile number for resetting their password."
    operationId: verifyCode
    parameters: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              code:
                type: string
                description: "Verification code sent to the user. This code is typically a 6-digit."
                example: "541236"
              to:
                type: string
                description: "User's email address or mobile number where the verification code was sent. Must be a valid email address or mobile number format depending on the chosen 'via' method. Not support mobile yet!"
                example: "a@a.com"
              via:
                type: integer
                description: "Verification via. 1: EMAIL"
                enum:
                  - 1
              type:
                description: "Type of verification. 2: RESET_PASSWORD"
                enum:
                  - 2
            required:
              - code
              - to
              - via
              - type
    responses:
      '200':
        description: "Verification code verified successfully"
        content:
          application/json:
            schema:
              properties:
                status:
                  type: string
                  example: "success"
                code:
                  type: integer
                  example: "200"
                message:
                  type: string
                  example: "Verification code verified successfully"
                data:
                  type: object
                  properties:
                    user:
                      type: object
                      properties:
                        ulid:
                          type: string
                          example: "01HZA0X41HX5CXY2YWD4GP0WAG"
                        first_name:
                          type: string
                          example: "Ali"
                        last_name:
                          type: string
                          example: "Karimi"
                        email:
                          type: string
                          example: "a@b.com"
                        created_at:
                          type: string
                          format: date-time
                          example: "2024-05-15T06:56:46+00:00"
                        updated_at:
                          type: string
                          format: date-time
                          example: "2024-05-15T06:56:46+00:00"
                    token:
                      type: object
                      properties:
                        access_token:
                          type: string
                          example: "eyJ0eXAiOiJKV1QiLC..."
                        type:
                          type: string
                          example: "Bearer"

"/auth/signup":
  post:
    tags:
      - auth
    summary: "Verify and sign up a new user."
    description: "Verify and sign up a new user."
    operationId: signup
    parameters: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              code:
                type: string
                description: "Verification code sent to the user. This code is typically a 6-digit."
                example: "541236"
              to:
                type: string
                description: "User's email address or mobile number where the verification code was sent. Must be a valid email address or mobile number format depending on the chosen 'via' method. Not support mobile yet!"
                example: "a@a.com"
              via:
                type: integer
                description: "Verification via. **Possible Values:**  1: EMAIL"
                enum:
                  - 1
              type:
                description: "Type of verification. **Possible Values:**  1: SET_PASSWORD"
                enum:
                  - 1
            required:
              - code
              - to
              - via
              - type
    responses:
      '200':
        description: "Created Successful"
        content:
          application/json:
            schema:
              properties:
                status:
                  type: string
                  example: "success"
                code:
                  type: integer
                  example: "200"
                message:
                  type: string
                  example: "User signed up successfully."
                data:
                  type: object
                  properties:
                    user:
                      type: object
                      properties:
                        ulid:
                          type: string
                          example: "01HZA0X41HX5CXY2YWD4GP0WAG"
                        first_name:
                          type: string
                          example: null
                        last_name:
                          type: string
                          example: null
                        email:
                          type: string
                          example: "a@b.com"
                        status:
                          type: string
                          example: "active"
                        created_at:
                          type: string
                          format: date-time
                          example: "2024-05-15T06:56:46+00:00"
                        updated_at:
                          type: string
                          format: date-time
                          example: "2024-05-15T06:56:46+00:00"
                    token:
                      type: object
                      properties:
                        access_token:
                          type: string
                          example: "eyJ0eXAiOiJKV1QiLC..."
                        type:
                          type: string
                          example: "Bearer"
        headers:
          Set-Cookie:
            schema:
              type: string
              example: refresh_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...; Path=/; HttpOnly; Secure; SameSite=Strict

"/auth/set-password":
  post:
    tags:
      - auth
    summary: "Set user password"
    description: "This endpoint allows an authenticated user to set a new password for their account."
    operationId: setPassword
    parameters: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              password:
                type: string
                minLength: 8
                description: "The new password for the user account. **Possible Values:** at least 8 characters. | mixed number and letter."
                example: "123a456b"
              password_confirmation:
                type: string
                minLength: 8
                description: "Repeat password"
                example: "123a456b"
            required:
              - password
              - password_confirmation
    responses:
      '200':
        description: "Created Successful"
        content:
          application/json:
            schema:
              type: object
              example: {
                "status": "success",
                "code": 200,
                "message": "Password has been set successfully.",
                "data": {
                  "user": {
                    "ulid": "01J11WDAS03P9W7JE2X3TZEJ7R",
                    "first_name": null,
                    "last_name": null,
                    "email": "2@gmail.com",
                    "status": "active",
                    "created_at": "2024-06-23T06:26:51.000000Z",
                    "updated_at": "2024-06-23T06:27:23.000000Z",
                    "roles": [
                      {
                        "name": "applicant",
                        "created_at": "2024-06-22T13:46:57.000000Z",
                        "updated_at": "2024-06-22T13:46:57.000000Z"
                      }
                    ]
                  }
                }
              }

"/auth/login":
  post:
    tags:
      - auth
    summary: "Login User"
    description: "Allows a user to log in using their email and password."
    operationId: login
    parameters: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                description: "The user's email."
                default: "example@example.com"
              password:
                type: string
                minLength: 8
                description: "The user's password."
                example: "123a456b"
              g-recaptcha-response:
                type: string
                description: "The reCAPTCHA response from the client."
                default: "03AGdBq24XvxmBsQ8jd2LhfQhPUwUGJx_6PxqY3GQxNM6xXX6xXXpqYjZhgA"
            required:
              - email
              - password
              - g-recaptcha-response
    responses:
      '200':
        description: "User logged in successfully."
        content:
          application/json:
            schema:
              properties:
                status:
                  type: string
                  example: "success"
                code:
                  type: integer
                  example: "200"
                message:
                  type: string
                  example: "User logged in successfully."
                data:
                  type: object
                  example: {
                    "status": "success",
                    "code": 200,
                    "message": "User logged in successfully",
                    "data": {
                      "user": {
                        "ulid": "01J11WDAS03P9W7JE2X3TZEJ7R",
                        "first_name": null,
                        "last_name": null,
                        "email": "example@example.com",
                        "status": "active",
                        "created_at": "2024-06-23T06:26:51.000000Z",
                        "updated_at": "2024-06-23T06:27:23.000000Z",
                        "roles": [
                          {
                            "name": "applicant",
                            "created_at": "2024-06-22T13:46:57.000000Z",
                            "updated_at": "2024-06-22T13:46:57.000000Z"
                          }
                        ]
                      },
                      "token": {
                        "access_token": "eyJ0eXAiOiJKV1...",
                        "type": "Bearer",
                        "expires_at": "2024-06-23 07:17:15"
                      }
                    }
                  }
        headers:
          Set-Cookie:
            schema:
              type: string
              example: refresh_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...; Path=/; HttpOnly; Secure; SameSite=Strict

"/auth/refresh-token":
  post:
    tags:
      - auth
    summary: "Refresh access token"
    description: "Refreshes the user's access token using the refresh token stored in an HTTP-only cookie"
    operationId: refreshToken
    responses:
      '200':
        description: "The payment methods was retrieved successfully."
        content:
          application/json:
            schema:
              type: object
              example: {
                "status": "success",
                "code": 200,
                "message": "Access token has been successfully refreshed.",
                "data": {
                  "token": {
                    "access_token": "eyJ0eXAiOiJKV1...",
                    "type": "Bearer",
                    "expires_at": "2024-06-23 06:31:30"
                  }
                }
              }
        headers:
          Set-Cookie:
            schema:
              type: string
              example: refresh_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...; Path=/; HttpOnly; Secure; SameSite=Strict

"/auth/logout":
  post:
    tags:
      - auth
    summary: "Log out user"
    description: "Logs out the current user."
    operationId: logout
    responses:
      '200':
        description: "Successful logout"
        content:
          application/json:
            schema:
              type: object
              example: {
                "status": "success",
                "code": 200,
                "message": "You have been successfully logged out.",
                "data": null
              }