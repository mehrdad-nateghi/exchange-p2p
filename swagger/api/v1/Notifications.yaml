'/users/notifications/stream':
  get:
    tags:
      - Notifications
    summary: 'Stream notifications in real-time'
    description: 'Establishes a Server-Sent Events (SSE) connection to receive real-time notifications'
    operationId: userNotificationsStream
    responses:
      '200':
        description: 'Server-Sent Events stream established successfully'
        content:
          text/event-stream:
            schema:
              type: object
              required:
                - status
                - code
                - message
                - data
              properties:
                status:
                  type: string
                  example: 'success'
                code:
                  type: integer
                  example: 200
                message:
                  type: string
                  example: 'اعلان‌ها با موفقیت دریافت شد.'
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      example: 'ee4a9e35-b6b6-4630-81ff-33d2f60212e9'
                    title:
                      type: string
                      example: 'کاربر گرامی'
                    message:
                      type: string
                      example: 'از ثبت نام شما سپاسگزاریم! بسیار خوشحالیم که به خانواده Laravel پیوسته اید.'
                    info:
                      type: object
                      required:
                        - icon
                        - model
                      properties:
                        icon:
                          type: string
                          example: ''
                        model:
                          type: object
                          required:
                            - ulid
                            - name
                          properties:
                            ulid:
                              type: string
                              example: ''
                            name:
                              type: string
                              example: ''
                    created_at:
                      type: string
                      format: date-time
                      example: '2025-01-19T15:21:31.000000Z'
                    read_at:
                      type: string
                      format: date-time
                      nullable: true
                      example: null

'/users/notifications/{id}/read':
  patch:
    tags:
      - Notifications
    summary: 'Mark notification as read'
    description: 'Marks a specific notification as read by its ID'
    operationId: markNotificationAsRead
    parameters:
      - name: id
        in: path
        required: true
        description: 'The UUID of the notification'
        schema:
          type: string
          format: uuid
          example: 'd0fa4110-dcea-4ff7-a12b-07530dedaf6b'
    responses:
      '200':
        description: 'Notification marked as read successfully'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Base200Response'
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: boolean
                      example: true

'/users/notifications':
  get:
    tags:
      - Notifications
    summary: 'Get user notifications'
    description: 'Retrieve paginated list of notifications with filtering and sorting options'
    operationId: getUserNotifications
    parameters:
      - name: filter[read_status]
        in: query
        description: 'Filter notifications by read status'
        required: false
        schema:
          type: string
          enum: [read, unread]
          example: read
      - name: sort
        in: query
        description: 'Sort notifications by creation date'
        required: false
        schema:
          type: string
          enum: [created_at, -created_at, read_at]
          example: -created_at
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/pageNumber'
    responses:
      '200':
        description: 'The notifications were retrieved successfully'
        content:
          application/json:
            schema:
              type: object
              required:
                - status
                - code
                - message
                - data
              properties:
                status:
                  type: string
                  example: 'success'
                code:
                  type: integer
                  example: 200
                message:
                  type: string
                  example: 'اعلان‌ها با موفقیت دریافت شد.'
                data:
                  type: object
                  required:
                    - items
                    - pagination
                  properties:
                    items:
                      type: array
                      items:
                        type: object
                        required:
                          - id
                          - title
                          - message
                          - info
                          - created_at
                          - read_at
                        properties:
                          id:
                            type: string
                            format: uuid
                            example: 'ee4a9e35-b6b6-4630-81ff-33d2f60212e9'
                          title:
                            type: string
                            example: 'کاربر گرامی'
                          message:
                            type: string
                            example: 'از ثبت نام شما سپاسگزاریم! بسیار خوشحالیم که به خانواده Laravel پیوسته اید.'
                          info:
                            type: object
                            required:
                              - icon
                              - model
                            properties:
                              icon:
                                type: string
                                enum: [info, request, trade]
                                example: 'info'
                              model:
                                type: object
                                required:
                                  - ulid
                                  - name
                                properties:
                                  ulid:
                                    type: string
                                    example: ''
                                  name:
                                    type: string
                                    enum: [request, trade, '']
                                    example: 'request'
                          created_at:
                            type: string
                            format: date-time
                            example: '2025-01-19T15:21:31.000000Z'
                          read_at:
                            type: string
                            format: date-time
                            nullable: true
                            example: null
                    pagination:
                      type: object
                      required:
                        - current_page
                        - first_page_url
                        - from
                        - last_page
                        - last_page_url
                        - next_page_url
                        - path
                        - per_page
                        - prev_page_url
                        - to
                        - total
                      properties:
                        current_page:
                          type: integer
                          example: 1
                        first_page_url:
                          type: string
                          example: 'http://localhost:8000/api/v1/users/notifications?sort=-created_at&page=1'
                        from:
                          type: integer
                          example: 1
                        last_page:
                          type: integer
                          example: 1
                        last_page_url:
                          type: string
                          example: 'http://localhost:8000/api/v1/users/notifications?sort=-created_at&page=1'
                        next_page_url:
                          type: string
                          nullable: true
                          example: null
                        path:
                          type: string
                          example: 'http://localhost:8000/api/v1/users/notifications'
                        per_page:
                          type: integer
                          example: 15
                        prev_page_url:
                          type: string
                          nullable: true
                          example: null
                        to:
                          type: integer
                          example: 1
                        total:
                          type: integer
                          example: 1

'/users/notifications/read-all':
  patch:
    tags:
      - Notifications
    summary: 'Mark all notifications as read'
    description: 'Marks all notifications as read'
    operationId: markAllNotificationsAsRead
    responses:
      '200':
        description: 'All notifications marked as read successfully'
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Base200Response'
                - type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      example: null
